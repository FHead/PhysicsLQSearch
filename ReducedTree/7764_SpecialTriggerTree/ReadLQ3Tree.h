#include <string>
#include <vector>
using namespace std;

#include "TFile.h"
#include "TTree.h"
#include "TH1D.h"

class TreeRecord
{
public:
   double        RunNumber;
   double        EventNumber;
   double        BunchCrossing;
   double        LumiSection;
   double        Orbit;
   int           PileUp;
   int           CaloJetCount;
   int           CaloJetCount30;
   int           CaloJetCount50;
   int           CaloJetCount100;
   double        CaloJetE[100];
   double        CaloJetPT[100];
   double        CaloJetEta[100];
   double        CaloJetPhi[100];
   double        CaloJetCSVTag[100];
   double        CaloJetCSVMTag[100];
   double        CaloJetSSVHETag[100];
   double        CaloJetSSVHPTag[100];
   double        CaloJetTCHPTag[100];
   double        CaloJetTCHETag[100];
   int           PFJetCount;
   int           PFJetCount30;
   int           PFJetCount50;
   int           PFJetCount100;
   double        PFJetE[100];
   double        PFJetPT[100];
   double        PFJetEta[100];
   double        PFJetPhi[100];
   double        PFJetCSVTag[100];
   double        PFJetCSVMTag[100];
   double        PFJetSSVHETag[100];
   double        PFJetSSVHPTag[100];
   double        PFJetTCHPTag[100];
   double        PFJetTCHETag[100];
   int           PrimaryVertexCount;
   double        PrimaryVertexMaxSumPT;
   double        CaloMET[2];
   double        PFMET[2];
   int           GoodMuonCount;
   int           GoodMuonCountTight;
   int           GoodMuonCountLoose;
   double        Muon1PT;
   double        Muon1Eta;
   double        Muon1Phi;
   bool          Muon1PassTight;
   bool          Muon1PassLoose;
   float         Muon1Isolation;
   double        Muon2PT;
   double        Muon2Eta;
   double        Muon2Phi;
   bool          Muon2PassTight;
   bool          Muon2PassLoose;
   float         Muon2Isolation;
   double        Muon3PT;
   double        Muon3Eta;
   double        Muon3Phi;
   bool          Muon3PassTight;
   bool          Muon3PassLoose;
   float         Muon3Isolation;
   double        Muon4PT;
   double        Muon4Eta;
   double        Muon4Phi;
   bool          Muon4PassTight;
   bool          Muon4PassLoose;
   float         Muon4Isolation;
   double        Muon5PT;
   double        Muon5Eta;
   double        Muon5Phi;
   bool          Muon5PassTight;
   bool          Muon5PassLoose;
   float         Muon5Isolation;
   double        Muon6PT;
   double        Muon6Eta;
   double        Muon6Phi;
   bool          Muon6PassTight;
   bool          Muon6PassLoose;
   float         Muon6Isolation;
   double        Muon7PT;
   double        Muon7Eta;
   double        Muon7Phi;
   bool          Muon7PassTight;
   bool          Muon7PassLoose;
   float         Muon7Isolation;
   double        Muon8PT;
   double        Muon8Eta;
   double        Muon8Phi;
   bool          Muon8PassTight;
   bool          Muon8PassLoose;
   float         Muon8Isolation;
   double        Muon9PT;
   double        Muon9Eta;
   double        Muon9Phi;
   bool          Muon9PassTight;
   bool          Muon9PassLoose;
   float         Muon9Isolation;
   double        Muon10PT;
   double        Muon10Eta;
   double        Muon10Phi;
   bool          Muon10PassTight;
   bool          Muon10PassLoose;
   float         Muon10Isolation;
   int           GoodElectronCount;
   int           GoodElectronCount80;
   int           GoodElectronCount85;
   int           GoodElectronCount90;
   int           GoodElectronCount95;
   double        Electron1PT;
   double        Electron1Eta;
   double        Electron1Phi;
   bool          Electron1Pass95;
   bool          Electron1Pass90;
   bool          Electron1Pass85;
   bool          Electron1Pass80;
   double        Electron1Isolation;
   double        Electron2PT;
   double        Electron2Eta;
   double        Electron2Phi;
   bool          Electron2Pass95;
   bool          Electron2Pass90;
   bool          Electron2Pass85;
   bool          Electron2Pass80;
   double        Electron2Isolation;
   double        Electron3PT;
   double        Electron3Eta;
   double        Electron3Phi;
   bool          Electron3Pass95;
   bool          Electron3Pass90;
   bool          Electron3Pass85;
   bool          Electron3Pass80;
   double        Electron3Isolation;
   double        Electron4PT;
   double        Electron4Eta;
   double        Electron4Phi;
   bool          Electron4Pass95;
   bool          Electron4Pass90;
   bool          Electron4Pass85;
   bool          Electron4Pass80;
   double        Electron4Isolation;
   double        Electron5PT;
   double        Electron5Eta;
   double        Electron5Phi;
   bool          Electron5Pass95;
   bool          Electron5Pass90;
   bool          Electron5Pass85;
   bool          Electron5Pass80;
   double        Electron5Isolation;
   double        Electron6PT;
   double        Electron6Eta;
   double        Electron6Phi;
   bool          Electron6Pass95;
   bool          Electron6Pass90;
   bool          Electron6Pass85;
   bool          Electron6Pass80;
   double        Electron6Isolation;
   double        Electron7PT;
   double        Electron7Eta;
   double        Electron7Phi;
   bool          Electron7Pass95;
   bool          Electron7Pass90;
   bool          Electron7Pass85;
   bool          Electron7Pass80;
   double        Electron7Isolation;
   double        Electron8PT;
   double        Electron8Eta;
   double        Electron8Phi;
   bool          Electron8Pass95;
   bool          Electron8Pass90;
   bool          Electron8Pass85;
   bool          Electron8Pass80;
   double        Electron8Isolation;
   double        Electron9PT;
   double        Electron9Eta;
   double        Electron9Phi;
   bool          Electron9Pass95;
   bool          Electron9Pass90;
   bool          Electron9Pass85;
   bool          Electron9Pass80;
   double        Electron9Isolation;
   double        Electron10PT;
   double        Electron10Eta;
   double        Electron10Phi;
   bool          Electron10Pass95;
   bool          Electron10Pass90;
   bool          Electron10Pass85;
   bool          Electron10Pass80;
   double        Electron10Isolation;
   int           AllElectronCount;
   double        AllElectron1PT;
   double        AllElectron1Eta;
   double        AllElectron1Phi;
   bool          AllElectron1Pass95;
   bool          AllElectron1Pass90;
   bool          AllElectron1Pass85;
   bool          AllElectron1Pass80;
   double        AllElectron1Isolation;
   double        AllElectron1ConversionDistance;
   double        AllElectron1ConversionDeltaCotTheta;
   double        AllElectron1SigmaIEtaIEta;
   double        AllElectron2PT;
   double        AllElectron2Eta;
   double        AllElectron2Phi;
   bool          AllElectron2Pass95;
   bool          AllElectron2Pass90;
   bool          AllElectron2Pass85;
   bool          AllElectron2Pass80;
   double        AllElectron2Isolation;
   double        AllElectron2ConversionDistance;
   double        AllElectron2ConversionDeltaCotTheta;
   double        AllElectron2SigmaIEtaIEta;
   double        AllElectron3PT;
   double        AllElectron3Eta;
   double        AllElectron3Phi;
   bool          AllElectron3Pass95;
   bool          AllElectron3Pass90;
   bool          AllElectron3Pass85;
   bool          AllElectron3Pass80;
   double        AllElectron3Isolation;
   double        AllElectron3ConversionDistance;
   double        AllElectron3ConversionDeltaCotTheta;
   double        AllElectron3SigmaIEtaIEta;
   double        AllElectron4PT;
   double        AllElectron4Eta;
   double        AllElectron4Phi;
   bool          AllElectron4Pass95;
   bool          AllElectron4Pass90;
   bool          AllElectron4Pass85;
   bool          AllElectron4Pass80;
   double        AllElectron4Isolation;
   double        AllElectron4ConversionDistance;
   double        AllElectron4ConversionDeltaCotTheta;
   double        AllElectron4SigmaIEtaIEta;
   double        AllElectron5PT;
   double        AllElectron5Eta;
   double        AllElectron5Phi;
   bool          AllElectron5Pass95;
   bool          AllElectron5Pass90;
   bool          AllElectron5Pass85;
   bool          AllElectron5Pass80;
   double        AllElectron5Isolation;
   double        AllElectron5ConversionDistance;
   double        AllElectron5ConversionDeltaCotTheta;
   double        AllElectron5SigmaIEtaIEta;
   double        AllElectron6PT;
   double        AllElectron6Eta;
   double        AllElectron6Phi;
   bool          AllElectron6Pass95;
   bool          AllElectron6Pass90;
   bool          AllElectron6Pass85;
   bool          AllElectron6Pass80;
   double        AllElectron6Isolation;
   double        AllElectron6ConversionDistance;
   double        AllElectron6ConversionDeltaCotTheta;
   double        AllElectron6SigmaIEtaIEta;
   double        AllElectron7PT;
   double        AllElectron7Eta;
   double        AllElectron7Phi;
   bool          AllElectron7Pass95;
   bool          AllElectron7Pass90;
   bool          AllElectron7Pass85;
   bool          AllElectron7Pass80;
   double        AllElectron7Isolation;
   double        AllElectron7ConversionDistance;
   double        AllElectron7ConversionDeltaCotTheta;
   double        AllElectron7SigmaIEtaIEta;
   double        AllElectron8PT;
   double        AllElectron8Eta;
   double        AllElectron8Phi;
   bool          AllElectron8Pass95;
   bool          AllElectron8Pass90;
   bool          AllElectron8Pass85;
   bool          AllElectron8Pass80;
   double        AllElectron8Isolation;
   double        AllElectron8ConversionDistance;
   double        AllElectron8ConversionDeltaCotTheta;
   double        AllElectron8SigmaIEtaIEta;
   double        AllElectron9PT;
   double        AllElectron9Eta;
   double        AllElectron9Phi;
   bool          AllElectron9Pass95;
   bool          AllElectron9Pass90;
   bool          AllElectron9Pass85;
   bool          AllElectron9Pass80;
   double        AllElectron9Isolation;
   double        AllElectron9ConversionDistance;
   double        AllElectron9ConversionDeltaCotTheta;
   double        AllElectron9SigmaIEtaIEta;
   double        AllElectron10PT;
   double        AllElectron10Eta;
   double        AllElectron10Phi;
   bool          AllElectron10Pass95;
   bool          AllElectron10Pass90;
   bool          AllElectron10Pass85;
   bool          AllElectron10Pass80;
   double        AllElectron10Isolation;
   double        AllElectron10ConversionDistance;
   double        AllElectron10ConversionDeltaCotTheta;
   double        AllElectron10SigmaIEtaIEta;
   bool          PassHLT;
   bool          PassNoiseFilter;
   bool          PassCaloJetID;
   bool          PassCaloJet60;
   bool          PassPFJetID;
   bool          PassPFJet60;
   bool          PassDiJetAve30;
   bool          PassDiJetAve60;
   bool          PassDiJetAve80;
   bool          PassDiJetAve110;
   bool          PassDiJetAve150;
   bool          PassDiJetAve190;
   bool          PassDiJetAve240;
   bool          PassDiJetAve300;
   bool          PassDiJetAve370;
   bool          PassDiJetAve15U;
   bool          PassDiJetAve30U;
   bool          PassDiJetAve50U;
   bool          PassDiJetAve70U;
   bool          PassDiJetAve100U;
   bool          PassDiJetAve140U;
   bool          PassDiJetAve180U;
   bool          PassDiJetAve300U;
   bool          PassSingleMu3;
   bool          PassSingleMu5;
   bool          PassSingleMu8;
   bool          PassSingleMu12;
   bool          PassSingleMu15;
   bool          PassSingleMu20;
   bool          PassSingleMu24;
   bool          PassSingleMu30;
   bool          PassSingleMu40;
   bool          PassSingleMu100;
   bool          PassR014MR150;
   bool          PassR020MR150;
   bool          PassR025MR150;
   bool          PassR020MR500;
   bool          PassR020MR550;
   bool          PassR023MR550;
   bool          PassR025MR400;
   bool          PassR025MR450;
   bool          PassR029MR450;
   bool          PassR033MR300;
   bool          PassR033MR350;
   bool          PassR036MR350;
   bool          PassR038MR200;
   bool          PassR038MR250;
   bool          PassR042MR250;
   bool          PassEleL10R020MR200;
   bool          PassEleL10R025MR200;
   bool          PassEleL10R029MR200;
   bool          PassEleT10R020MR200;
   bool          PassMu8R020MR200;
   bool          PassMu8R025MR200;
   bool          PassMu8R029MR200;
   bool          PassMu17Mu8;
   bool          PassMu13Mu8;
   bool          PassMu8EleL17;
   bool          PassMu17EleL8;
   bool          PassMET65;
   bool          PassMET100;
   bool          PassMET120;
   bool          PassMET200;
   bool          PassMET400;
   bool          PassHT150;
   bool          PassHT200;
   bool          PassHT250;
   bool          PassHT300;
   bool          PassHT350;
   bool          PassHT400;
   bool          PassHT450;
   bool          PassHT500;
   bool          PassHT550;
   bool          PassHT600;
   bool          PassHT650;
   bool          PassHT2000;
   double        SBMass1;
   double        SBMass2;
   double        ChiMass;
   double        m0;
   double        m12;
   int           PhotonCount;
   double        PhotonE[10];
   double        PhotonPT[10];
   double        PhotonEta[10];
   double        PhotonPhi[10];
   int           PhotonFiducialFlag[10];
   int           PhotonRecoFlag[10];
   double        PhotonHOverE[10];
   double        PhotonTrackIsolation[10];
   double        PhotonHollowTrackIsolation[10];
   double        PhotonEcalIsolation[10];
   double        PhotonHcalIsolation[10];
   double        PhotonIsolation[10];
   bool          PhotonPixelSeed[10];
   bool          PhotonMatchedConversion[10];
   double        PhotonSigmaIEtaIEta[10];
   double        PhotonR9[10];
   double        Rho;

public:
   TreeRecord() { Clear(); }
   ~TreeRecord() { Clear(); }
   void Clear();
   void SetBranchAddress(TTree *Tree);
   void Branch(TTree *Tree);
public:
   vector<double> PUWeight;
   void InitializeWeight(string RootFile);
   double GetCurrentWeight();
   double GetWeight(int NPU);
};

void TreeRecord::Clear()
{
   RunNumber = 0;
   EventNumber = 0;
   BunchCrossing = 0;
   LumiSection = 0;
   Orbit = 0;
   PileUp = 0;
   CaloJetCount = 0;
   CaloJetCount30 = 0;
   CaloJetCount50 = 0;
   CaloJetCount100 = 0;

   for(int i = 0; i < 100; i++)
   {
      CaloJetE[i] = 0;
      CaloJetPT[i] = 0;
      CaloJetEta[i] = 0;
      CaloJetPhi[i] = 0;
      CaloJetCSVTag[i] = 0;
      CaloJetCSVMTag[i] = 0;
      CaloJetSSVHETag[i] = 0;
      CaloJetSSVHPTag[i] = 0;
      CaloJetTCHPTag[i] = 0;
      CaloJetTCHETag[i] = 0;
   }

   PFJetCount = 0;
   PFJetCount30 = 0;
   PFJetCount50 = 0;
   PFJetCount100 = 0;

   for(int i = 0; i < 100; i++)
   {
      PFJetE[i] = 0;
      PFJetPT[i] = 0;
      PFJetEta[i] = 0;
      PFJetPhi[i] = 0;
      PFJetCSVTag[i] = 0;
      PFJetCSVMTag[i] = 0;
      PFJetSSVHETag[i] = 0;
      PFJetSSVHPTag[i] = 0;
      PFJetTCHPTag[i] = 0;
      PFJetTCHETag[i] = 0;
   }

   PrimaryVertexCount = 0;
   PrimaryVertexMaxSumPT = 0;
   CaloMET[0] = 0;
   CaloMET[1] = 0;
   PFMET[0] = 0;
   PFMET[1] = 0;
   GoodMuonCount = 0;
   GoodMuonCountTight = 0;
   GoodMuonCountLoose = 0;
   Muon1PT = 0;
   Muon1Eta = 0;
   Muon1Phi = 0;
   Muon1PassTight = 0;
   Muon1PassLoose = 0;
   Muon1Isolation = 0;
   Muon2PT = 0;
   Muon2Eta = 0;
   Muon2Phi = 0;
   Muon2PassTight = 0;
   Muon2PassLoose = 0;
   Muon2Isolation = 0;
   Muon3PT = 0;
   Muon3Eta = 0;
   Muon3Phi = 0;
   Muon3PassTight = 0;
   Muon3PassLoose = 0;
   Muon3Isolation = 0;
   Muon4PT = 0;
   Muon4Eta = 0;
   Muon4Phi = 0;
   Muon4PassTight = 0;
   Muon4PassLoose = 0;
   Muon4Isolation = 0;
   Muon5PT = 0;
   Muon5Eta = 0;
   Muon5Phi = 0;
   Muon5PassTight = 0;
   Muon5PassLoose = 0;
   Muon5Isolation = 0;
   Muon6PT = 0;
   Muon6Eta = 0;
   Muon6Phi = 0;
   Muon6PassTight = 0;
   Muon6PassLoose = 0;
   Muon6Isolation = 0;
   Muon7PT = 0;
   Muon7Eta = 0;
   Muon7Phi = 0;
   Muon7PassTight = 0;
   Muon7PassLoose = 0;
   Muon7Isolation = 0;
   Muon8PT = 0;
   Muon8Eta = 0;
   Muon8Phi = 0;
   Muon8PassTight = 0;
   Muon8PassLoose = 0;
   Muon8Isolation = 0;
   Muon9PT = 0;
   Muon9Eta = 0;
   Muon9Phi = 0;
   Muon9PassTight = 0;
   Muon9PassLoose = 0;
   Muon9Isolation = 0;
   Muon10PT = 0;
   Muon10Eta = 0;
   Muon10Phi = 0;
   Muon10PassTight = 0;
   Muon10PassLoose = 0;
   Muon10Isolation = 0;
   GoodElectronCount = 0;
   GoodElectronCount80 = 0;
   GoodElectronCount85 = 0;
   GoodElectronCount90 = 0;
   GoodElectronCount95 = 0;
   Electron1PT = 0;
   Electron1Eta = 0;
   Electron1Phi = 0;
   Electron1Pass95 = 0;
   Electron1Pass90 = 0;
   Electron1Pass85 = 0;
   Electron1Pass80 = 0;
   Electron1Isolation = 0;
   Electron2PT = 0;
   Electron2Eta = 0;
   Electron2Phi = 0;
   Electron2Pass95 = 0;
   Electron2Pass90 = 0;
   Electron2Pass85 = 0;
   Electron2Pass80 = 0;
   Electron2Isolation = 0;
   Electron3PT = 0;
   Electron3Eta = 0;
   Electron3Phi = 0;
   Electron3Pass95 = 0;
   Electron3Pass90 = 0;
   Electron3Pass85 = 0;
   Electron3Pass80 = 0;
   Electron3Isolation = 0;
   Electron4PT = 0;
   Electron4Eta = 0;
   Electron4Phi = 0;
   Electron4Pass95 = 0;
   Electron4Pass90 = 0;
   Electron4Pass85 = 0;
   Electron4Pass80 = 0;
   Electron4Isolation = 0;
   Electron5PT = 0;
   Electron5Eta = 0;
   Electron5Phi = 0;
   Electron5Pass95 = 0;
   Electron5Pass90 = 0;
   Electron5Pass85 = 0;
   Electron5Pass80 = 0;
   Electron5Isolation = 0;
   Electron6PT = 0;
   Electron6Eta = 0;
   Electron6Phi = 0;
   Electron6Pass95 = 0;
   Electron6Pass90 = 0;
   Electron6Pass85 = 0;
   Electron6Pass80 = 0;
   Electron6Isolation = 0;
   Electron7PT = 0;
   Electron7Eta = 0;
   Electron7Phi = 0;
   Electron7Pass95 = 0;
   Electron7Pass90 = 0;
   Electron7Pass85 = 0;
   Electron7Pass80 = 0;
   Electron7Isolation = 0;
   Electron8PT = 0;
   Electron8Eta = 0;
   Electron8Phi = 0;
   Electron8Pass95 = 0;
   Electron8Pass90 = 0;
   Electron8Pass85 = 0;
   Electron8Pass80 = 0;
   Electron8Isolation = 0;
   Electron9PT = 0;
   Electron9Eta = 0;
   Electron9Phi = 0;
   Electron9Pass95 = 0;
   Electron9Pass90 = 0;
   Electron9Pass85 = 0;
   Electron9Pass80 = 0;
   Electron9Isolation = 0;
   Electron10PT = 0;
   Electron10Eta = 0;
   Electron10Phi = 0;
   Electron10Pass95 = 0;
   Electron10Pass90 = 0;
   Electron10Pass85 = 0;
   Electron10Pass80 = 0;
   Electron10Isolation = 0;
   AllElectronCount = 0;
   AllElectron1PT = 0;
   AllElectron1Eta = 0;
   AllElectron1Phi = 0;
   AllElectron1Pass95 = 0;
   AllElectron1Pass90 = 0;
   AllElectron1Pass85 = 0;
   AllElectron1Pass80 = 0;
   AllElectron1Isolation = 0;
   AllElectron1ConversionDistance = 0;
   AllElectron1ConversionDeltaCotTheta = 0;
   AllElectron1SigmaIEtaIEta = 0;
   AllElectron2PT = 0;
   AllElectron2Eta = 0;
   AllElectron2Phi = 0;
   AllElectron2Pass95 = 0;
   AllElectron2Pass90 = 0;
   AllElectron2Pass85 = 0;
   AllElectron2Pass80 = 0;
   AllElectron2Isolation = 0;
   AllElectron2ConversionDistance = 0;
   AllElectron2ConversionDeltaCotTheta = 0;
   AllElectron2SigmaIEtaIEta = 0;
   AllElectron3PT = 0;
   AllElectron3Eta = 0;
   AllElectron3Phi = 0;
   AllElectron3Pass95 = 0;
   AllElectron3Pass90 = 0;
   AllElectron3Pass85 = 0;
   AllElectron3Pass80 = 0;
   AllElectron3Isolation = 0;
   AllElectron3ConversionDistance = 0;
   AllElectron3ConversionDeltaCotTheta = 0;
   AllElectron3SigmaIEtaIEta = 0;
   AllElectron4PT = 0;
   AllElectron4Eta = 0;
   AllElectron4Phi = 0;
   AllElectron4Pass95 = 0;
   AllElectron4Pass90 = 0;
   AllElectron4Pass85 = 0;
   AllElectron4Pass80 = 0;
   AllElectron4Isolation = 0;
   AllElectron4ConversionDistance = 0;
   AllElectron4ConversionDeltaCotTheta = 0;
   AllElectron4SigmaIEtaIEta = 0;
   AllElectron5PT = 0;
   AllElectron5Eta = 0;
   AllElectron5Phi = 0;
   AllElectron5Pass95 = 0;
   AllElectron5Pass90 = 0;
   AllElectron5Pass85 = 0;
   AllElectron5Pass80 = 0;
   AllElectron5Isolation = 0;
   AllElectron5ConversionDistance = 0;
   AllElectron5ConversionDeltaCotTheta = 0;
   AllElectron5SigmaIEtaIEta = 0;
   AllElectron6PT = 0;
   AllElectron6Eta = 0;
   AllElectron6Phi = 0;
   AllElectron6Pass95 = 0;
   AllElectron6Pass90 = 0;
   AllElectron6Pass85 = 0;
   AllElectron6Pass80 = 0;
   AllElectron6Isolation = 0;
   AllElectron6ConversionDistance = 0;
   AllElectron6ConversionDeltaCotTheta = 0;
   AllElectron6SigmaIEtaIEta = 0;
   AllElectron7PT = 0;
   AllElectron7Eta = 0;
   AllElectron7Phi = 0;
   AllElectron7Pass95 = 0;
   AllElectron7Pass90 = 0;
   AllElectron7Pass85 = 0;
   AllElectron7Pass80 = 0;
   AllElectron7Isolation = 0;
   AllElectron7ConversionDistance = 0;
   AllElectron7ConversionDeltaCotTheta = 0;
   AllElectron7SigmaIEtaIEta = 0;
   AllElectron8PT = 0;
   AllElectron8Eta = 0;
   AllElectron8Phi = 0;
   AllElectron8Pass95 = 0;
   AllElectron8Pass90 = 0;
   AllElectron8Pass85 = 0;
   AllElectron8Pass80 = 0;
   AllElectron8Isolation = 0;
   AllElectron8ConversionDistance = 0;
   AllElectron8ConversionDeltaCotTheta = 0;
   AllElectron8SigmaIEtaIEta = 0;
   AllElectron9PT = 0;
   AllElectron9Eta = 0;
   AllElectron9Phi = 0;
   AllElectron9Pass95 = 0;
   AllElectron9Pass90 = 0;
   AllElectron9Pass85 = 0;
   AllElectron9Pass80 = 0;
   AllElectron9Isolation = 0;
   AllElectron9ConversionDistance = 0;
   AllElectron9ConversionDeltaCotTheta = 0;
   AllElectron9SigmaIEtaIEta = 0;
   AllElectron10PT = 0;
   AllElectron10Eta = 0;
   AllElectron10Phi = 0;
   AllElectron10Pass95 = 0;
   AllElectron10Pass90 = 0;
   AllElectron10Pass85 = 0;
   AllElectron10Pass80 = 0;
   AllElectron10Isolation = 0;
   AllElectron10ConversionDistance = 0;
   AllElectron10ConversionDeltaCotTheta = 0;
   AllElectron10SigmaIEtaIEta = 0;
   PassHLT = 0;
   PassNoiseFilter = 0;
   PassCaloJetID = 0;
   PassCaloJet60 = 0;
   PassPFJetID = 0;
   PassPFJet60 = 0;
   PassDiJetAve30 = 0;
   PassDiJetAve60 = 0;
   PassDiJetAve80 = 0;
   PassDiJetAve110 = 0;
   PassDiJetAve150 = 0;
   PassDiJetAve190 = 0;
   PassDiJetAve240 = 0;
   PassDiJetAve300 = 0;
   PassDiJetAve370 = 0;
   PassDiJetAve15U = 0;
   PassDiJetAve30U = 0;
   PassDiJetAve50U = 0;
   PassDiJetAve70U = 0;
   PassDiJetAve100U = 0;
   PassDiJetAve140U = 0;
   PassDiJetAve180U = 0;
   PassDiJetAve300U = 0;
   PassSingleMu3 = 0;
   PassSingleMu5 = 0;
   PassSingleMu8 = 0;
   PassSingleMu12 = 0;
   PassSingleMu15 = 0;
   PassSingleMu20 = 0;
   PassSingleMu24 = 0;
   PassSingleMu30 = 0;
   PassSingleMu40 = 0;
   PassSingleMu100 = 0;
   PassR014MR150 = 0;
   PassR020MR150 = 0;
   PassR025MR150 = 0;
   PassR020MR500 = 0;
   PassR020MR550 = 0;
   PassR023MR550 = 0;
   PassR025MR400 = 0;
   PassR025MR450 = 0;
   PassR029MR450 = 0;
   PassR033MR300 = 0;
   PassR033MR350 = 0;
   PassR036MR350 = 0;
   PassR038MR200 = 0;
   PassR038MR250 = 0;
   PassR042MR250 = 0;
   PassEleL10R020MR200 = 0;
   PassEleL10R025MR200 = 0;
   PassEleL10R029MR200 = 0;
   PassEleT10R020MR200 = 0;
   PassMu8R020MR200 = 0;
   PassMu8R025MR200 = 0;
   PassMu8R029MR200 = 0;
   PassMu17Mu8 = 0;
   PassMu13Mu8 = 0;
   PassMu8EleL17 = 0;
   PassMu17EleL8 = 0;
   PassMET65 = false;
   PassMET100 = false;
   PassMET120 = false;
   PassMET200 = false;
   PassMET400 = false;
   PassHT150 = false;
   PassHT200 = false;
   PassHT250 = false;
   PassHT300 = false;
   PassHT350 = false;
   PassHT400 = false;
   PassHT450 = false;
   PassHT500 = false;
   PassHT550 = false;
   PassHT600 = false;
   PassHT650 = false;
   PassHT2000 = false;
   SBMass1 = 0;
   SBMass2 = 0;
   ChiMass = 0;
   m0 = 0;
   m12 = 0;
   PhotonCount = 0;
   for(int i = 0; i < 10; i++)
   {
      PhotonE[10] = 0;
      PhotonPT[10] = 0;
      PhotonEta[10] = 0;
      PhotonPhi[10] = 0;
      PhotonFiducialFlag[10] = 0;
      PhotonRecoFlag[10] = 0;
      PhotonHOverE[10] = 0;
      PhotonTrackIsolation[10] = 0;
      PhotonHollowTrackIsolation[10] = 0;
      PhotonEcalIsolation[10] = 0;
      PhotonHcalIsolation[10] = 0;
      PhotonIsolation[10] = 0;
      PhotonPixelSeed[10] = true;
      PhotonMatchedConversion[10] = false;
      PhotonSigmaIEtaIEta[10] = 0;
      PhotonR9[10] = 0;
   }
   Rho = 0;
}

void TreeRecord::SetBranchAddress(TTree *Tree)
{
   if(Tree == NULL)
      return;

   Tree->SetBranchAddress("RunNumber", &RunNumber);
   Tree->SetBranchAddress("EventNumber", &EventNumber);
   Tree->SetBranchAddress("BunchCrossing", &BunchCrossing);
   Tree->SetBranchAddress("LumiSection", &LumiSection);
   Tree->SetBranchAddress("Orbit", &Orbit);
   Tree->SetBranchAddress("PileUp", &PileUp);
   Tree->SetBranchAddress("CaloJetCount", &CaloJetCount);
   Tree->SetBranchAddress("CaloJetCount30", &CaloJetCount30);
   Tree->SetBranchAddress("CaloJetCount50", &CaloJetCount50);
   Tree->SetBranchAddress("CaloJetCount100", &CaloJetCount100);
   Tree->SetBranchAddress("CaloJetE", CaloJetE);
   Tree->SetBranchAddress("CaloJetPT", CaloJetPT);
   Tree->SetBranchAddress("CaloJetEta", CaloJetEta);
   Tree->SetBranchAddress("CaloJetPhi", CaloJetPhi);
   Tree->SetBranchAddress("CaloJetCSVTag", CaloJetCSVTag);
   Tree->SetBranchAddress("CaloJetCSVMTag", CaloJetCSVMTag);
   Tree->SetBranchAddress("CaloJetSSVHETag", CaloJetSSVHETag);
   Tree->SetBranchAddress("CaloJetSSVHPTag", CaloJetSSVHPTag);
   Tree->SetBranchAddress("CaloJetTCHPTag", CaloJetTCHPTag);
   Tree->SetBranchAddress("CaloJetTCHETag", CaloJetTCHETag);
   Tree->SetBranchAddress("PFJetCount", &PFJetCount);
   Tree->SetBranchAddress("PFJetCount30", &PFJetCount30);
   Tree->SetBranchAddress("PFJetCount50", &PFJetCount50);
   Tree->SetBranchAddress("PFJetCount100", &PFJetCount100);
   Tree->SetBranchAddress("PFJetE", PFJetE);
   Tree->SetBranchAddress("PFJetPT", PFJetPT);
   Tree->SetBranchAddress("PFJetEta", PFJetEta);
   Tree->SetBranchAddress("PFJetPhi", PFJetPhi);
   Tree->SetBranchAddress("PFJetCSVTag", PFJetCSVTag);
   Tree->SetBranchAddress("PFJetCSVMTag", PFJetCSVMTag);
   Tree->SetBranchAddress("PFJetSSVHETag", PFJetSSVHETag);
   Tree->SetBranchAddress("PFJetSSVHPMTag", PFJetSSVHPTag);
   Tree->SetBranchAddress("PFJetTCHPTag", PFJetTCHPTag);
   Tree->SetBranchAddress("PFJetTCHETag", PFJetTCHETag);
   Tree->SetBranchAddress("PrimaryVertexCount", &PrimaryVertexCount);
   Tree->SetBranchAddress("PrimaryVertexMaxSumPT", &PrimaryVertexMaxSumPT);
   Tree->SetBranchAddress("CaloMET", CaloMET);
   Tree->SetBranchAddress("PFMET", PFMET);
   Tree->SetBranchAddress("GoodMuonCount", &GoodMuonCount);
   Tree->SetBranchAddress("GoodMuonCountTight", &GoodMuonCountTight);
   Tree->SetBranchAddress("GoodMuonCountLoose", &GoodMuonCountLoose);
   Tree->SetBranchAddress("Muon1PT", &Muon1PT);
   Tree->SetBranchAddress("Muon1Eta", &Muon1Eta);
   Tree->SetBranchAddress("Muon1Phi", &Muon1Phi);
   Tree->SetBranchAddress("Muon1PassTight", &Muon1PassTight);
   Tree->SetBranchAddress("Muon1PassLoose", &Muon1PassLoose);
   Tree->SetBranchAddress("Muon1Isolation", &Muon1Isolation);
   Tree->SetBranchAddress("Muon2PT", &Muon2PT);
   Tree->SetBranchAddress("Muon2Eta", &Muon2Eta);
   Tree->SetBranchAddress("Muon2Phi", &Muon2Phi);
   Tree->SetBranchAddress("Muon2PassTight", &Muon2PassTight);
   Tree->SetBranchAddress("Muon2PassLoose", &Muon2PassLoose);
   Tree->SetBranchAddress("Muon2Isolation", &Muon2Isolation);
   Tree->SetBranchAddress("Muon3PT", &Muon3PT);
   Tree->SetBranchAddress("Muon3Eta", &Muon3Eta);
   Tree->SetBranchAddress("Muon3Phi", &Muon3Phi);
   Tree->SetBranchAddress("Muon3PassTight", &Muon3PassTight);
   Tree->SetBranchAddress("Muon3PassLoose", &Muon3PassLoose);
   Tree->SetBranchAddress("Muon3Isolation", &Muon3Isolation);
   Tree->SetBranchAddress("Muon4PT", &Muon4PT);
   Tree->SetBranchAddress("Muon4Eta", &Muon4Eta);
   Tree->SetBranchAddress("Muon4Phi", &Muon4Phi);
   Tree->SetBranchAddress("Muon4PassTight", &Muon4PassTight);
   Tree->SetBranchAddress("Muon4PassLoose", &Muon4PassLoose);
   Tree->SetBranchAddress("Muon4Isolation", &Muon4Isolation);
   Tree->SetBranchAddress("Muon5PT", &Muon5PT);
   Tree->SetBranchAddress("Muon5Eta", &Muon5Eta);
   Tree->SetBranchAddress("Muon5Phi", &Muon5Phi);
   Tree->SetBranchAddress("Muon5PassTight", &Muon5PassTight);
   Tree->SetBranchAddress("Muon5PassLoose", &Muon5PassLoose);
   Tree->SetBranchAddress("Muon5Isolation", &Muon5Isolation);
   Tree->SetBranchAddress("Muon6PT", &Muon6PT);
   Tree->SetBranchAddress("Muon6Eta", &Muon6Eta);
   Tree->SetBranchAddress("Muon6Phi", &Muon6Phi);
   Tree->SetBranchAddress("Muon6PassTight", &Muon6PassTight);
   Tree->SetBranchAddress("Muon6PassLoose", &Muon6PassLoose);
   Tree->SetBranchAddress("Muon6Isolation", &Muon6Isolation);
   Tree->SetBranchAddress("Muon7PT", &Muon7PT);
   Tree->SetBranchAddress("Muon7Eta", &Muon7Eta);
   Tree->SetBranchAddress("Muon7Phi", &Muon7Phi);
   Tree->SetBranchAddress("Muon7PassTight", &Muon7PassTight);
   Tree->SetBranchAddress("Muon7PassLoose", &Muon7PassLoose);
   Tree->SetBranchAddress("Muon7Isolation", &Muon7Isolation);
   Tree->SetBranchAddress("Muon8PT", &Muon8PT);
   Tree->SetBranchAddress("Muon8Eta", &Muon8Eta);
   Tree->SetBranchAddress("Muon8Phi", &Muon8Phi);
   Tree->SetBranchAddress("Muon8PassTight", &Muon8PassTight);
   Tree->SetBranchAddress("Muon8PassLoose", &Muon8PassLoose);
   Tree->SetBranchAddress("Muon8Isolation", &Muon8Isolation);
   Tree->SetBranchAddress("Muon9PT", &Muon9PT);
   Tree->SetBranchAddress("Muon9Eta", &Muon9Eta);
   Tree->SetBranchAddress("Muon9Phi", &Muon9Phi);
   Tree->SetBranchAddress("Muon9PassTight", &Muon9PassTight);
   Tree->SetBranchAddress("Muon9PassLoose", &Muon9PassLoose);
   Tree->SetBranchAddress("Muon9Isolation", &Muon9Isolation);
   Tree->SetBranchAddress("Muon10PT", &Muon10PT);
   Tree->SetBranchAddress("Muon10Eta", &Muon10Eta);
   Tree->SetBranchAddress("Muon10Phi", &Muon10Phi);
   Tree->SetBranchAddress("Muon10PassTight", &Muon10PassTight);
   Tree->SetBranchAddress("Muon10PassLoose", &Muon10PassLoose);
   Tree->SetBranchAddress("Muon10Isolation", &Muon10Isolation);
   Tree->SetBranchAddress("GoodElectronCount", &GoodElectronCount);
   Tree->SetBranchAddress("GoodElectronCount80", &GoodElectronCount80);
   Tree->SetBranchAddress("GoodElectronCount85", &GoodElectronCount85);
   Tree->SetBranchAddress("GoodElectronCount90", &GoodElectronCount90);
   Tree->SetBranchAddress("GoodElectronCount95", &GoodElectronCount95);
   Tree->SetBranchAddress("Electron1PT", &Electron1PT);
   Tree->SetBranchAddress("Electron1Eta", &Electron1Eta);
   Tree->SetBranchAddress("Electron1Phi", &Electron1Phi);
   Tree->SetBranchAddress("Electron1Pass95", &Electron1Pass95);
   Tree->SetBranchAddress("Electron1Pass90", &Electron1Pass90);
   Tree->SetBranchAddress("Electron1Pass85", &Electron1Pass85);
   Tree->SetBranchAddress("Electron1Pass80", &Electron1Pass80);
   Tree->SetBranchAddress("Electron1Isolation", &Electron1Isolation);
   Tree->SetBranchAddress("Electron2PT", &Electron2PT);
   Tree->SetBranchAddress("Electron2Eta", &Electron2Eta);
   Tree->SetBranchAddress("Electron2Phi", &Electron2Phi);
   Tree->SetBranchAddress("Electron2Pass95", &Electron2Pass95);
   Tree->SetBranchAddress("Electron2Pass90", &Electron2Pass90);
   Tree->SetBranchAddress("Electron2Pass85", &Electron2Pass85);
   Tree->SetBranchAddress("Electron2Pass80", &Electron2Pass80);
   Tree->SetBranchAddress("Electron2Isolation", &Electron2Isolation);
   Tree->SetBranchAddress("Electron3PT", &Electron3PT);
   Tree->SetBranchAddress("Electron3Eta", &Electron3Eta);
   Tree->SetBranchAddress("Electron3Phi", &Electron3Phi);
   Tree->SetBranchAddress("Electron3Pass95", &Electron3Pass95);
   Tree->SetBranchAddress("Electron3Pass90", &Electron3Pass90);
   Tree->SetBranchAddress("Electron3Pass85", &Electron3Pass85);
   Tree->SetBranchAddress("Electron3Pass80", &Electron3Pass80);
   Tree->SetBranchAddress("Electron3Isolation", &Electron3Isolation);
   Tree->SetBranchAddress("Electron4PT", &Electron4PT);
   Tree->SetBranchAddress("Electron4Eta", &Electron4Eta);
   Tree->SetBranchAddress("Electron4Phi", &Electron4Phi);
   Tree->SetBranchAddress("Electron4Pass95", &Electron4Pass95);
   Tree->SetBranchAddress("Electron4Pass90", &Electron4Pass90);
   Tree->SetBranchAddress("Electron4Pass85", &Electron4Pass85);
   Tree->SetBranchAddress("Electron4Pass80", &Electron4Pass80);
   Tree->SetBranchAddress("Electron4Isolation", &Electron4Isolation);
   Tree->SetBranchAddress("Electron5PT", &Electron5PT);
   Tree->SetBranchAddress("Electron5Eta", &Electron5Eta);
   Tree->SetBranchAddress("Electron5Phi", &Electron5Phi);
   Tree->SetBranchAddress("Electron5Pass95", &Electron5Pass95);
   Tree->SetBranchAddress("Electron5Pass90", &Electron5Pass90);
   Tree->SetBranchAddress("Electron5Pass85", &Electron5Pass85);
   Tree->SetBranchAddress("Electron5Pass80", &Electron5Pass80);
   Tree->SetBranchAddress("Electron5Isolation", &Electron5Isolation);
   Tree->SetBranchAddress("Electron6PT", &Electron6PT);
   Tree->SetBranchAddress("Electron6Eta", &Electron6Eta);
   Tree->SetBranchAddress("Electron6Phi", &Electron6Phi);
   Tree->SetBranchAddress("Electron6Pass95", &Electron6Pass95);
   Tree->SetBranchAddress("Electron6Pass90", &Electron6Pass90);
   Tree->SetBranchAddress("Electron6Pass85", &Electron6Pass85);
   Tree->SetBranchAddress("Electron6Pass80", &Electron6Pass80);
   Tree->SetBranchAddress("Electron6Isolation", &Electron6Isolation);
   Tree->SetBranchAddress("Electron7PT", &Electron7PT);
   Tree->SetBranchAddress("Electron7Eta", &Electron7Eta);
   Tree->SetBranchAddress("Electron7Phi", &Electron7Phi);
   Tree->SetBranchAddress("Electron7Pass95", &Electron7Pass95);
   Tree->SetBranchAddress("Electron7Pass90", &Electron7Pass90);
   Tree->SetBranchAddress("Electron7Pass85", &Electron7Pass85);
   Tree->SetBranchAddress("Electron7Pass80", &Electron7Pass80);
   Tree->SetBranchAddress("Electron7Isolation", &Electron7Isolation);
   Tree->SetBranchAddress("Electron8PT", &Electron8PT);
   Tree->SetBranchAddress("Electron8Eta", &Electron8Eta);
   Tree->SetBranchAddress("Electron8Phi", &Electron8Phi);
   Tree->SetBranchAddress("Electron8Pass95", &Electron8Pass95);
   Tree->SetBranchAddress("Electron8Pass90", &Electron8Pass90);
   Tree->SetBranchAddress("Electron8Pass85", &Electron8Pass85);
   Tree->SetBranchAddress("Electron8Pass80", &Electron8Pass80);
   Tree->SetBranchAddress("Electron8Isolation", &Electron8Isolation);
   Tree->SetBranchAddress("Electron9PT", &Electron9PT);
   Tree->SetBranchAddress("Electron9Eta", &Electron9Eta);
   Tree->SetBranchAddress("Electron9Phi", &Electron9Phi);
   Tree->SetBranchAddress("Electron9Pass95", &Electron9Pass95);
   Tree->SetBranchAddress("Electron9Pass90", &Electron9Pass90);
   Tree->SetBranchAddress("Electron9Pass85", &Electron9Pass85);
   Tree->SetBranchAddress("Electron9Pass80", &Electron9Pass80);
   Tree->SetBranchAddress("Electron9Isolation", &Electron9Isolation);
   Tree->SetBranchAddress("Electron10PT", &Electron10PT);
   Tree->SetBranchAddress("Electron10Eta", &Electron10Eta);
   Tree->SetBranchAddress("Electron10Phi", &Electron10Phi);
   Tree->SetBranchAddress("Electron10Pass95", &Electron10Pass95);
   Tree->SetBranchAddress("Electron10Pass90", &Electron10Pass90);
   Tree->SetBranchAddress("Electron10Pass85", &Electron10Pass85);
   Tree->SetBranchAddress("Electron10Pass80", &Electron10Pass80);
   Tree->SetBranchAddress("Electron10Isolation", &Electron10Isolation);
   Tree->SetBranchAddress("AllElectronCount", &AllElectronCount);
   Tree->SetBranchAddress("AllElectron1PT", &AllElectron1PT);
   Tree->SetBranchAddress("AllElectron1Eta", &AllElectron1Eta);
   Tree->SetBranchAddress("AllElectron1Phi", &AllElectron1Phi);
   Tree->SetBranchAddress("AllElectron1Pass95", &AllElectron1Pass95);
   Tree->SetBranchAddress("AllElectron1Pass90", &AllElectron1Pass90);
   Tree->SetBranchAddress("AllElectron1Pass85", &AllElectron1Pass85);
   Tree->SetBranchAddress("AllElectron1Pass80", &AllElectron1Pass80);
   Tree->SetBranchAddress("AllElectron1Isolation", &AllElectron1Isolation);
   Tree->SetBranchAddress("AllElectron1ConversionDistance", &AllElectron1ConversionDistance);
   Tree->SetBranchAddress("AllElectron1ConversionDeltaCotTheta", &AllElectron1ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron1SigmaIEtaIEta", &AllElectron1SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron2PT", &AllElectron2PT);
   Tree->SetBranchAddress("AllElectron2Eta", &AllElectron2Eta);
   Tree->SetBranchAddress("AllElectron2Phi", &AllElectron2Phi);
   Tree->SetBranchAddress("AllElectron2Pass95", &AllElectron2Pass95);
   Tree->SetBranchAddress("AllElectron2Pass90", &AllElectron2Pass90);
   Tree->SetBranchAddress("AllElectron2Pass85", &AllElectron2Pass85);
   Tree->SetBranchAddress("AllElectron2Pass80", &AllElectron2Pass80);
   Tree->SetBranchAddress("AllElectron2Isolation", &AllElectron2Isolation);
   Tree->SetBranchAddress("AllElectron2ConversionDistance", &AllElectron2ConversionDistance);
   Tree->SetBranchAddress("AllElectron2ConversionDeltaCotTheta", &AllElectron2ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron2SigmaIEtaIEta", &AllElectron2SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron3PT", &AllElectron3PT);
   Tree->SetBranchAddress("AllElectron3Eta", &AllElectron3Eta);
   Tree->SetBranchAddress("AllElectron3Phi", &AllElectron3Phi);
   Tree->SetBranchAddress("AllElectron3Pass95", &AllElectron3Pass95);
   Tree->SetBranchAddress("AllElectron3Pass90", &AllElectron3Pass90);
   Tree->SetBranchAddress("AllElectron3Pass85", &AllElectron3Pass85);
   Tree->SetBranchAddress("AllElectron3Pass80", &AllElectron3Pass80);
   Tree->SetBranchAddress("AllElectron3Isolation", &AllElectron3Isolation);
   Tree->SetBranchAddress("AllElectron3ConversionDistance", &AllElectron3ConversionDistance);
   Tree->SetBranchAddress("AllElectron3ConversionDeltaCotTheta", &AllElectron3ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron3SigmaIEtaIEta", &AllElectron3SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron4PT", &AllElectron4PT);
   Tree->SetBranchAddress("AllElectron4Eta", &AllElectron4Eta);
   Tree->SetBranchAddress("AllElectron4Phi", &AllElectron4Phi);
   Tree->SetBranchAddress("AllElectron4Pass95", &AllElectron4Pass95);
   Tree->SetBranchAddress("AllElectron4Pass90", &AllElectron4Pass90);
   Tree->SetBranchAddress("AllElectron4Pass85", &AllElectron4Pass85);
   Tree->SetBranchAddress("AllElectron4Pass80", &AllElectron4Pass80);
   Tree->SetBranchAddress("AllElectron4Isolation", &AllElectron4Isolation);
   Tree->SetBranchAddress("AllElectron4ConversionDistance", &AllElectron4ConversionDistance);
   Tree->SetBranchAddress("AllElectron4ConversionDeltaCotTheta", &AllElectron4ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron4SigmaIEtaIEta", &AllElectron4SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron5PT", &AllElectron5PT);
   Tree->SetBranchAddress("AllElectron5Eta", &AllElectron5Eta);
   Tree->SetBranchAddress("AllElectron5Phi", &AllElectron5Phi);
   Tree->SetBranchAddress("AllElectron5Pass95", &AllElectron5Pass95);
   Tree->SetBranchAddress("AllElectron5Pass90", &AllElectron5Pass90);
   Tree->SetBranchAddress("AllElectron5Pass85", &AllElectron5Pass85);
   Tree->SetBranchAddress("AllElectron5Pass80", &AllElectron5Pass80);
   Tree->SetBranchAddress("AllElectron5Isolation", &AllElectron5Isolation);
   Tree->SetBranchAddress("AllElectron5ConversionDistance", &AllElectron5ConversionDistance);
   Tree->SetBranchAddress("AllElectron5ConversionDeltaCotTheta", &AllElectron5ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron5SigmaIEtaIEta", &AllElectron5SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron6PT", &AllElectron6PT);
   Tree->SetBranchAddress("AllElectron6Eta", &AllElectron6Eta);
   Tree->SetBranchAddress("AllElectron6Phi", &AllElectron6Phi);
   Tree->SetBranchAddress("AllElectron6Pass95", &AllElectron6Pass95);
   Tree->SetBranchAddress("AllElectron6Pass90", &AllElectron6Pass90);
   Tree->SetBranchAddress("AllElectron6Pass85", &AllElectron6Pass85);
   Tree->SetBranchAddress("AllElectron6Pass80", &AllElectron6Pass80);
   Tree->SetBranchAddress("AllElectron6Isolation", &AllElectron6Isolation);
   Tree->SetBranchAddress("AllElectron6ConversionDistance", &AllElectron6ConversionDistance);
   Tree->SetBranchAddress("AllElectron6ConversionDeltaCotTheta", &AllElectron6ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron6SigmaIEtaIEta", &AllElectron6SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron7PT", &AllElectron7PT);
   Tree->SetBranchAddress("AllElectron7Eta", &AllElectron7Eta);
   Tree->SetBranchAddress("AllElectron7Phi", &AllElectron7Phi);
   Tree->SetBranchAddress("AllElectron7Pass95", &AllElectron7Pass95);
   Tree->SetBranchAddress("AllElectron7Pass90", &AllElectron7Pass90);
   Tree->SetBranchAddress("AllElectron7Pass85", &AllElectron7Pass85);
   Tree->SetBranchAddress("AllElectron7Pass80", &AllElectron7Pass80);
   Tree->SetBranchAddress("AllElectron7Isolation", &AllElectron7Isolation);
   Tree->SetBranchAddress("AllElectron7ConversionDistance", &AllElectron7ConversionDistance);
   Tree->SetBranchAddress("AllElectron7ConversionDeltaCotTheta", &AllElectron7ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron7SigmaIEtaIEta", &AllElectron7SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron8PT", &AllElectron8PT);
   Tree->SetBranchAddress("AllElectron8Eta", &AllElectron8Eta);
   Tree->SetBranchAddress("AllElectron8Phi", &AllElectron8Phi);
   Tree->SetBranchAddress("AllElectron8Pass95", &AllElectron8Pass95);
   Tree->SetBranchAddress("AllElectron8Pass90", &AllElectron8Pass90);
   Tree->SetBranchAddress("AllElectron8Pass85", &AllElectron8Pass85);
   Tree->SetBranchAddress("AllElectron8Pass80", &AllElectron8Pass80);
   Tree->SetBranchAddress("AllElectron8Isolation", &AllElectron8Isolation);
   Tree->SetBranchAddress("AllElectron8ConversionDistance", &AllElectron8ConversionDistance);
   Tree->SetBranchAddress("AllElectron8ConversionDeltaCotTheta", &AllElectron8ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron8SigmaIEtaIEta", &AllElectron8SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron9PT", &AllElectron9PT);
   Tree->SetBranchAddress("AllElectron9Eta", &AllElectron9Eta);
   Tree->SetBranchAddress("AllElectron9Phi", &AllElectron9Phi);
   Tree->SetBranchAddress("AllElectron9Pass95", &AllElectron9Pass95);
   Tree->SetBranchAddress("AllElectron9Pass90", &AllElectron9Pass90);
   Tree->SetBranchAddress("AllElectron9Pass85", &AllElectron9Pass85);
   Tree->SetBranchAddress("AllElectron9Pass80", &AllElectron9Pass80);
   Tree->SetBranchAddress("AllElectron9Isolation", &AllElectron9Isolation);
   Tree->SetBranchAddress("AllElectron9ConversionDistance", &AllElectron9ConversionDistance);
   Tree->SetBranchAddress("AllElectron9ConversionDeltaCotTheta", &AllElectron9ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron9SigmaIEtaIEta", &AllElectron9SigmaIEtaIEta);
   Tree->SetBranchAddress("AllElectron10PT", &AllElectron10PT);
   Tree->SetBranchAddress("AllElectron10Eta", &AllElectron10Eta);
   Tree->SetBranchAddress("AllElectron10Phi", &AllElectron10Phi);
   Tree->SetBranchAddress("AllElectron10Pass95", &AllElectron10Pass95);
   Tree->SetBranchAddress("AllElectron10Pass90", &AllElectron10Pass90);
   Tree->SetBranchAddress("AllElectron10Pass85", &AllElectron10Pass85);
   Tree->SetBranchAddress("AllElectron10Pass80", &AllElectron10Pass80);
   Tree->SetBranchAddress("AllElectron10Isolation", &AllElectron10Isolation);
   Tree->SetBranchAddress("AllElectron10ConversionDistance", &AllElectron10ConversionDistance);
   Tree->SetBranchAddress("AllElectron10ConversionDeltaCotTheta", &AllElectron10ConversionDeltaCotTheta);
   Tree->SetBranchAddress("AllElectron10SigmaIEtaIEta", &AllElectron10SigmaIEtaIEta);
   Tree->SetBranchAddress("PassHLT", &PassHLT);
   Tree->SetBranchAddress("PassNoiseFilter", &PassNoiseFilter);
   Tree->SetBranchAddress("PassCaloJetID", &PassCaloJetID);
   Tree->SetBranchAddress("PassCaloJet60", &PassCaloJet60);
   Tree->SetBranchAddress("PassPFJetID", &PassPFJetID);
   Tree->SetBranchAddress("PassPFJet60", &PassPFJet60);
   Tree->SetBranchAddress("PassDiJetAve30", &PassDiJetAve30);
   Tree->SetBranchAddress("PassDiJetAve60", &PassDiJetAve60);
   Tree->SetBranchAddress("PassDiJetAve80", &PassDiJetAve80);
   Tree->SetBranchAddress("PassDiJetAve110", &PassDiJetAve110);
   Tree->SetBranchAddress("PassDiJetAve150", &PassDiJetAve150);
   Tree->SetBranchAddress("PassDiJetAve190", &PassDiJetAve190);
   Tree->SetBranchAddress("PassDiJetAve240", &PassDiJetAve240);
   Tree->SetBranchAddress("PassDiJetAve300", &PassDiJetAve300);
   Tree->SetBranchAddress("PassDiJetAve370", &PassDiJetAve370);
   Tree->SetBranchAddress("PassDiJetAve15U", &PassDiJetAve15U);
   Tree->SetBranchAddress("PassDiJetAve30U", &PassDiJetAve30U);
   Tree->SetBranchAddress("PassDiJetAve50U", &PassDiJetAve50U);
   Tree->SetBranchAddress("PassDiJetAve70U", &PassDiJetAve70U);
   Tree->SetBranchAddress("PassDiJetAve100U", &PassDiJetAve100U);
   Tree->SetBranchAddress("PassDiJetAve140U", &PassDiJetAve140U);
   Tree->SetBranchAddress("PassDiJetAve180U", &PassDiJetAve180U);
   Tree->SetBranchAddress("PassDiJetAve300U", &PassDiJetAve300U);
   Tree->SetBranchAddress("PassSingleMu3", &PassSingleMu3);
   Tree->SetBranchAddress("PassSingleMu5", &PassSingleMu5);
   Tree->SetBranchAddress("PassSingleMu8", &PassSingleMu8);
   Tree->SetBranchAddress("PassSingleMu12", &PassSingleMu12);
   Tree->SetBranchAddress("PassSingleMu15", &PassSingleMu15);
   Tree->SetBranchAddress("PassSingleMu20", &PassSingleMu20);
   Tree->SetBranchAddress("PassSingleMu24", &PassSingleMu24);
   Tree->SetBranchAddress("PassSingleMu30", &PassSingleMu30);
   Tree->SetBranchAddress("PassSingleMu40", &PassSingleMu40);
   Tree->SetBranchAddress("PassSingleMu100", &PassSingleMu100);
   Tree->SetBranchAddress("PassR014MR150", &PassR014MR150);
   Tree->SetBranchAddress("PassR020MR150", &PassR020MR150);
   Tree->SetBranchAddress("PassR025MR150", &PassR025MR150);
   Tree->SetBranchAddress("PassR020MR500", &PassR020MR500);
   Tree->SetBranchAddress("PassR020MR550", &PassR020MR550);
   Tree->SetBranchAddress("PassR023MR550", &PassR023MR550);
   Tree->SetBranchAddress("PassR025MR400", &PassR025MR400);
   Tree->SetBranchAddress("PassR025MR450", &PassR025MR450);
   Tree->SetBranchAddress("PassR029MR450", &PassR029MR450);
   Tree->SetBranchAddress("PassR033MR300", &PassR033MR300);
   Tree->SetBranchAddress("PassR033MR350", &PassR033MR350);
   Tree->SetBranchAddress("PassR036MR350", &PassR036MR350);
   Tree->SetBranchAddress("PassR038MR200", &PassR038MR200);
   Tree->SetBranchAddress("PassR038MR250", &PassR038MR250);
   Tree->SetBranchAddress("PassR042MR250", &PassR042MR250);
   Tree->SetBranchAddress("PassEleL10R020MR200", &PassEleL10R020MR200);
   Tree->SetBranchAddress("PassEleL10R025MR200", &PassEleL10R025MR200);
   Tree->SetBranchAddress("PassEleL10R029MR200", &PassEleL10R029MR200);
   Tree->SetBranchAddress("PassEleT10R020MR200", &PassEleT10R020MR200);
   Tree->SetBranchAddress("PassMu8R020MR200", &PassMu8R020MR200);
   Tree->SetBranchAddress("PassMu8R025MR200", &PassMu8R025MR200);
   Tree->SetBranchAddress("PassMu8R029MR200", &PassMu8R029MR200);
   Tree->SetBranchAddress("PassMu17Mu8", &PassMu17Mu8);
   Tree->SetBranchAddress("PassMu13Mu8", &PassMu13Mu8);
   Tree->SetBranchAddress("PassMu8EleL17", &PassMu8EleL17);
   Tree->SetBranchAddress("PassMu17EleL8", &PassMu17EleL8);
   Tree->SetBranchAddress("PassMET65", &PassMET65);
   Tree->SetBranchAddress("PassMET100", &PassMET100);
   Tree->SetBranchAddress("PassMET120", &PassMET120);
   Tree->SetBranchAddress("PassMET200", &PassMET200);
   Tree->SetBranchAddress("PassMET400", &PassMET400);
   Tree->SetBranchAddress("PassHT150", &PassHT150);
   Tree->SetBranchAddress("PassHT200", &PassHT200);
   Tree->SetBranchAddress("PassHT250", &PassHT250);
   Tree->SetBranchAddress("PassHT300", &PassHT300);
   Tree->SetBranchAddress("PassHT350", &PassHT350);
   Tree->SetBranchAddress("PassHT400", &PassHT400);
   Tree->SetBranchAddress("PassHT450", &PassHT450);
   Tree->SetBranchAddress("PassHT500", &PassHT500);
   Tree->SetBranchAddress("PassHT550", &PassHT550);
   Tree->SetBranchAddress("PassHT600", &PassHT600);
   Tree->SetBranchAddress("PassHT650", &PassHT650);
   Tree->SetBranchAddress("PassHT2000", &PassHT2000);
   Tree->SetBranchAddress("SBMass1", &SBMass1);
   Tree->SetBranchAddress("SBMass2", &SBMass2);
   Tree->SetBranchAddress("ChiMass", &ChiMass);
   Tree->SetBranchAddress("m0", &m0);
   Tree->SetBranchAddress("m12", &m12);
   Tree->SetBranchAddress("PhotonCount", &PhotonCount);
   Tree->SetBranchAddress("PhotonE", PhotonE);
   Tree->SetBranchAddress("PhotonPT", PhotonPT);
   Tree->SetBranchAddress("PhotonEta", PhotonEta);
   Tree->SetBranchAddress("PhotonPhi", PhotonPhi);
   Tree->SetBranchAddress("PhotonFiducialFlag", PhotonFiducialFlag);
   Tree->SetBranchAddress("PhotonRecoFlag", PhotonRecoFlag);
   Tree->SetBranchAddress("PhotonHOverE", PhotonHOverE);
   Tree->SetBranchAddress("PhotonTrackIsolation", PhotonTrackIsolation);
   Tree->SetBranchAddress("PhotonHollowTrackIsolation", PhotonHollowTrackIsolation);
   Tree->SetBranchAddress("PhotonEcalIsolation", PhotonEcalIsolation);
   Tree->SetBranchAddress("PhotonHcalIsolation", PhotonHcalIsolation);
   Tree->SetBranchAddress("PhotonIsolation", PhotonIsolation);
   Tree->SetBranchAddress("PhotonPixelSeed", PhotonPixelSeed);
   Tree->SetBranchAddress("PhotonMatchedConversion", PhotonMatchedConversion);
   Tree->SetBranchAddress("PhotonSigmaIEtaIEta", PhotonSigmaIEtaIEta);
   Tree->SetBranchAddress("PhotonR9", PhotonR9);
   Tree->SetBranchAddress("Rho", &Rho);
}
   
void TreeRecord::Branch(TTree *Tree)
{
   // General
   Tree->Branch("RunNumber", &RunNumber, "RunNumber/D");
   Tree->Branch("EventNumber", &EventNumber, "EventNumber/D");
   Tree->Branch("BunchCrossing", &BunchCrossing, "BunchCrossing/D");
   Tree->Branch("LumiSection", &LumiSection, "LumiSection/D");
   Tree->Branch("Orbit", &Orbit, "Orbit/D");
   Tree->Branch("PileUp", &PileUp, "PileUp/I");

   // calo jets
   Tree->Branch("CaloJetCount", &CaloJetCount, "CaloJetCount/I");
   Tree->Branch("CaloJetCount30", &CaloJetCount30, "CaloJetCount30/I");
   Tree->Branch("CaloJetCount50", &CaloJetCount50, "CaloJetCount50/I");
   Tree->Branch("CaloJetCount100", &CaloJetCount100, "CaloJetCount100/I");
   Tree->Branch("CaloJetE", CaloJetE, "CaloJetE[100]/D");
   Tree->Branch("CaloJetPT", CaloJetPT, "CaloJetPT[100]/D");
   Tree->Branch("CaloJetEta", CaloJetEta, "CaloJetEta[100]/D");
   Tree->Branch("CaloJetPhi", CaloJetPhi, "CaloJetPhi[100]/D");
   Tree->Branch("CaloJetCSVTag", CaloJetCSVTag, "CaloJetCSVTag[100]/D");
   Tree->Branch("CaloJetCSVMTag", CaloJetCSVMTag, "CaloJetCSVMTag[100]/D");
   Tree->Branch("CaloJetSSVHETag", CaloJetSSVHETag, "CaloJetSSVHETag[100]/D");
   Tree->Branch("CaloJetSSVHPTag", CaloJetSSVHPTag, "CaloJetSSVHPTag[100]/D");
   Tree->Branch("CaloJetTCHPTag", CaloJetTCHPTag, "CaloJetTCHPTag[100]/D");
   Tree->Branch("CaloJetTCHETag", CaloJetTCHETag, "CaloJetTCHETag[100]/D");

   // PF jets
   Tree->Branch("PFJetCount", &PFJetCount, "PFJetCount/I");
   Tree->Branch("PFJetCount30", &PFJetCount30, "PFJetCount30/I");
   Tree->Branch("PFJetCount50", &PFJetCount50, "PFJetCount50/I");
   Tree->Branch("PFJetCount100", &PFJetCount100, "PFJetCount100/I");
   Tree->Branch("PFJetE", PFJetE, "PFJetE[100]/D");
   Tree->Branch("PFJetPT", PFJetPT, "PFJetPT[100]/D");
   Tree->Branch("PFJetEta", PFJetEta, "PFJetEta[100]/D");
   Tree->Branch("PFJetPhi", PFJetPhi, "PFJetPhi[100]/D");
   Tree->Branch("PFJetCSVTag", PFJetCSVTag, "PFJetCSVTag[100]/D");
   Tree->Branch("PFJetCSVMTag", PFJetCSVMTag, "PFJetCSVMTag[100]/D");
   Tree->Branch("PFJetSSVHETag", PFJetSSVHETag, "PFJetSSVHETag[100]/D");
   Tree->Branch("PFJetSSVHPMTag", PFJetSSVHPTag, "PFJetSSVHPMTag[100]/D");
   Tree->Branch("PFJetTCHPTag", PFJetTCHPTag, "PFJetTCHPTag[100]/D");
   Tree->Branch("PFJetTCHETag", PFJetTCHETag, "PFJetTCHETag[100]/D");

   // Primary vertex
   Tree->Branch("PrimaryVertexCount", &PrimaryVertexCount, "PrimaryVertexCount/I");
   Tree->Branch("PrimaryVertexMaxSumPT", &PrimaryVertexMaxSumPT, "PrimaryVertexMaxSumPT/D");

   // Missing energy
   Tree->Branch("CaloMET", CaloMET, "CaloMET[2]/D");
   Tree->Branch("PFMET", PFMET, "PFMET[2]/D");

   // Muons
   Tree->Branch("GoodMuonCount", &GoodMuonCount, "GoodMuonCount/I");
   Tree->Branch("GoodMuonCountTight", &GoodMuonCountTight, "GoodMuonCountTight/I");
   Tree->Branch("GoodMuonCountLoose", &GoodMuonCountLoose, "GoodMuonCountLoose/I");

   Tree->Branch("Muon1PT", &Muon1PT, "Muon1PT/D");
   Tree->Branch("Muon1Eta", &Muon1Eta, "Muon1Eta/D");
   Tree->Branch("Muon1Phi", &Muon1Phi, "Muon1Phi/D");
   Tree->Branch("Muon1PassTight", &Muon1PassTight, "Muon1PassTight/O");
   Tree->Branch("Muon1PassLoose", &Muon1PassLoose, "Muon1PassLoose/O");
   Tree->Branch("Muon1Isolation", &Muon1Isolation, "Muon1Isolation/F");
   Tree->Branch("Muon2PT", &Muon2PT, "Muon2PT/D");
   Tree->Branch("Muon2Eta", &Muon2Eta, "Muon2Eta/D");
   Tree->Branch("Muon2Phi", &Muon2Phi, "Muon2Phi/D");
   Tree->Branch("Muon2PassTight", &Muon2PassTight, "Muon2PassTight/O");
   Tree->Branch("Muon2PassLoose", &Muon2PassLoose, "Muon2PassLoose/O");
   Tree->Branch("Muon2Isolation", &Muon2Isolation, "Muon2Isolation/F");
   Tree->Branch("Muon3PT", &Muon3PT, "Muon3PT/D");
   Tree->Branch("Muon3Eta", &Muon3Eta, "Muon3Eta/D");
   Tree->Branch("Muon3Phi", &Muon3Phi, "Muon3Phi/D");
   Tree->Branch("Muon3PassTight", &Muon3PassTight, "Muon3PassTight/O");
   Tree->Branch("Muon3PassLoose", &Muon3PassLoose, "Muon3PassLoose/O");
   Tree->Branch("Muon3Isolation", &Muon3Isolation, "Muon3Isolation/F");
   Tree->Branch("Muon4PT", &Muon4PT, "Muon4PT/D");
   Tree->Branch("Muon4Eta", &Muon4Eta, "Muon4Eta/D");
   Tree->Branch("Muon4Phi", &Muon4Phi, "Muon4Phi/D");
   Tree->Branch("Muon4PassTight", &Muon4PassTight, "Muon4PassTight/O");
   Tree->Branch("Muon4PassLoose", &Muon4PassLoose, "Muon4PassLoose/O");
   Tree->Branch("Muon4Isolation", &Muon4Isolation, "Muon4Isolation/F");
   Tree->Branch("Muon5PT", &Muon5PT, "Muon5PT/D");
   Tree->Branch("Muon5Eta", &Muon5Eta, "Muon5Eta/D");
   Tree->Branch("Muon5Phi", &Muon5Phi, "Muon5Phi/D");
   Tree->Branch("Muon5PassTight", &Muon5PassTight, "Muon5PassTight/O");
   Tree->Branch("Muon5PassLoose", &Muon5PassLoose, "Muon5PassLoose/O");
   Tree->Branch("Muon5Isolation", &Muon5Isolation, "Muon5Isolation/F");
   Tree->Branch("Muon6PT", &Muon6PT, "Muon6PT/D");
   Tree->Branch("Muon6Eta", &Muon6Eta, "Muon6Eta/D");
   Tree->Branch("Muon6Phi", &Muon6Phi, "Muon6Phi/D");
   Tree->Branch("Muon6PassTight", &Muon6PassTight, "Muon6PassTight/O");
   Tree->Branch("Muon6PassLoose", &Muon6PassLoose, "Muon6PassLoose/O");
   Tree->Branch("Muon6Isolation", &Muon6Isolation, "Muon6Isolation/F");
   Tree->Branch("Muon7PT", &Muon7PT, "Muon7PT/D");
   Tree->Branch("Muon7Eta", &Muon7Eta, "Muon7Eta/D");
   Tree->Branch("Muon7Phi", &Muon7Phi, "Muon7Phi/D");
   Tree->Branch("Muon7PassTight", &Muon7PassTight, "Muon7PassTight/O");
   Tree->Branch("Muon7PassLoose", &Muon7PassLoose, "Muon7PassLoose/O");
   Tree->Branch("Muon7Isolation", &Muon7Isolation, "Muon7Isolation/F");
   Tree->Branch("Muon8PT", &Muon8PT, "Muon8PT/D");
   Tree->Branch("Muon8Eta", &Muon8Eta, "Muon8Eta/D");
   Tree->Branch("Muon8Phi", &Muon8Phi, "Muon8Phi/D");
   Tree->Branch("Muon8PassTight", &Muon8PassTight, "Muon8PassTight/O");
   Tree->Branch("Muon8PassLoose", &Muon8PassLoose, "Muon8PassLoose/O");
   Tree->Branch("Muon8Isolation", &Muon8Isolation, "Muon8Isolation/F");
   Tree->Branch("Muon9PT", &Muon9PT, "Muon9PT/D");
   Tree->Branch("Muon9Eta", &Muon9Eta, "Muon9Eta/D");
   Tree->Branch("Muon9Phi", &Muon9Phi, "Muon9Phi/D");
   Tree->Branch("Muon9PassTight", &Muon9PassTight, "Muon9PassTight/O");
   Tree->Branch("Muon9PassLoose", &Muon9PassLoose, "Muon9PassLoose/O");
   Tree->Branch("Muon9Isolation", &Muon9Isolation, "Muon9Isolation/F");
   Tree->Branch("Muon10PT", &Muon10PT, "Muon10PT/D");
   Tree->Branch("Muon10Eta", &Muon10Eta, "Muon10Eta/D");
   Tree->Branch("Muon10Phi", &Muon10Phi, "Muon10Phi/D");
   Tree->Branch("Muon10PassTight", &Muon10PassTight, "Muon10PassTight/O");
   Tree->Branch("Muon10PassLoose", &Muon10PassLoose, "Muon10PassLoose/O");
   Tree->Branch("Muon10Isolation", &Muon10Isolation, "Muon10Isolation/F");

   // Electrons
   Tree->Branch("GoodElectronCount", &GoodElectronCount, "GoodElectronCount/I");
   Tree->Branch("GoodElectronCount80", &GoodElectronCount80, "GoodElectronCount80/I");
   Tree->Branch("GoodElectronCount85", &GoodElectronCount85, "GoodElectronCount85/I");
   Tree->Branch("GoodElectronCount90", &GoodElectronCount90, "GoodElectronCount90/I");
   Tree->Branch("GoodElectronCount95", &GoodElectronCount95, "GoodElectronCount95/I");

   Tree->Branch("Electron1PT", &Electron1PT, "Electron1PT/D");
   Tree->Branch("Electron1Eta", &Electron1Eta, "Electron1Eta/D");
   Tree->Branch("Electron1Phi", &Electron1Phi, "Electron1Phi/D");
   Tree->Branch("Electron1Pass95", &Electron1Pass95, "Electron1Pass95/O");
   Tree->Branch("Electron1Pass90", &Electron1Pass90, "Electron1Pass90/O");
   Tree->Branch("Electron1Pass85", &Electron1Pass85, "Electron1Pass85/O");
   Tree->Branch("Electron1Pass80", &Electron1Pass80, "Electron1Pass80/O");
   Tree->Branch("Electron1Isolation", &Electron1Isolation, "Electron1Isolation/D");
   Tree->Branch("Electron2PT", &Electron2PT, "Electron2PT/D");
   Tree->Branch("Electron2Eta", &Electron2Eta, "Electron2Eta/D");
   Tree->Branch("Electron2Phi", &Electron2Phi, "Electron2Phi/D");
   Tree->Branch("Electron2Pass95", &Electron2Pass95, "Electron2Pass95/O");
   Tree->Branch("Electron2Pass90", &Electron2Pass90, "Electron2Pass90/O");
   Tree->Branch("Electron2Pass85", &Electron2Pass85, "Electron2Pass85/O");
   Tree->Branch("Electron2Pass80", &Electron2Pass80, "Electron2Pass80/O");
   Tree->Branch("Electron2Isolation", &Electron2Isolation, "Electron2Isolation/D");
   Tree->Branch("Electron3PT", &Electron3PT, "Electron3PT/D");
   Tree->Branch("Electron3Eta", &Electron3Eta, "Electron3Eta/D");
   Tree->Branch("Electron3Phi", &Electron3Phi, "Electron3Phi/D");
   Tree->Branch("Electron3Pass95", &Electron3Pass95, "Electron3Pass95/O");
   Tree->Branch("Electron3Pass90", &Electron3Pass90, "Electron3Pass90/O");
   Tree->Branch("Electron3Pass85", &Electron3Pass85, "Electron3Pass85/O");
   Tree->Branch("Electron3Pass80", &Electron3Pass80, "Electron3Pass80/O");
   Tree->Branch("Electron3Isolation", &Electron3Isolation, "Electron3Isolation/D");
   Tree->Branch("Electron4PT", &Electron4PT, "Electron4PT/D");
   Tree->Branch("Electron4Eta", &Electron4Eta, "Electron4Eta/D");
   Tree->Branch("Electron4Phi", &Electron4Phi, "Electron4Phi/D");
   Tree->Branch("Electron4Pass95", &Electron4Pass95, "Electron4Pass95/O");
   Tree->Branch("Electron4Pass90", &Electron4Pass90, "Electron4Pass90/O");
   Tree->Branch("Electron4Pass85", &Electron4Pass85, "Electron4Pass85/O");
   Tree->Branch("Electron4Pass80", &Electron4Pass80, "Electron4Pass80/O");
   Tree->Branch("Electron4Isolation", &Electron4Isolation, "Electron4Isolation/D");
   Tree->Branch("Electron5PT", &Electron5PT, "Electron5PT/D");
   Tree->Branch("Electron5Eta", &Electron5Eta, "Electron5Eta/D");
   Tree->Branch("Electron5Phi", &Electron5Phi, "Electron5Phi/D");
   Tree->Branch("Electron5Pass95", &Electron5Pass95, "Electron5Pass95/O");
   Tree->Branch("Electron5Pass90", &Electron5Pass90, "Electron5Pass90/O");
   Tree->Branch("Electron5Pass85", &Electron5Pass85, "Electron5Pass85/O");
   Tree->Branch("Electron5Pass80", &Electron5Pass80, "Electron5Pass80/O");
   Tree->Branch("Electron5Isolation", &Electron5Isolation, "Electron5Isolation/D");
   Tree->Branch("Electron6PT", &Electron6PT, "Electron6PT/D");
   Tree->Branch("Electron6Eta", &Electron6Eta, "Electron6Eta/D");
   Tree->Branch("Electron6Phi", &Electron6Phi, "Electron6Phi/D");
   Tree->Branch("Electron6Pass95", &Electron6Pass95, "Electron6Pass95/O");
   Tree->Branch("Electron6Pass90", &Electron6Pass90, "Electron6Pass90/O");
   Tree->Branch("Electron6Pass85", &Electron6Pass85, "Electron6Pass85/O");
   Tree->Branch("Electron6Pass80", &Electron6Pass80, "Electron6Pass80/O");
   Tree->Branch("Electron6Isolation", &Electron6Isolation, "Electron6Isolation/D");
   Tree->Branch("Electron7PT", &Electron7PT, "Electron7PT/D");
   Tree->Branch("Electron7Eta", &Electron7Eta, "Electron7Eta/D");
   Tree->Branch("Electron7Phi", &Electron7Phi, "Electron7Phi/D");
   Tree->Branch("Electron7Pass95", &Electron7Pass95, "Electron7Pass95/O");
   Tree->Branch("Electron7Pass90", &Electron7Pass90, "Electron7Pass90/O");
   Tree->Branch("Electron7Pass85", &Electron7Pass85, "Electron7Pass85/O");
   Tree->Branch("Electron7Pass80", &Electron7Pass80, "Electron7Pass80/O");
   Tree->Branch("Electron7Isolation", &Electron7Isolation, "Electron7Isolation/D");
   Tree->Branch("Electron8PT", &Electron8PT, "Electron8PT/D");
   Tree->Branch("Electron8Eta", &Electron8Eta, "Electron8Eta/D");
   Tree->Branch("Electron8Phi", &Electron8Phi, "Electron8Phi/D");
   Tree->Branch("Electron8Pass95", &Electron8Pass95, "Electron8Pass95/O");
   Tree->Branch("Electron8Pass90", &Electron8Pass90, "Electron8Pass90/O");
   Tree->Branch("Electron8Pass85", &Electron8Pass85, "Electron8Pass85/O");
   Tree->Branch("Electron8Pass80", &Electron8Pass80, "Electron8Pass80/O");
   Tree->Branch("Electron8Isolation", &Electron8Isolation, "Electron8Isolation/D");
   Tree->Branch("Electron9PT", &Electron9PT, "Electron9PT/D");
   Tree->Branch("Electron9Eta", &Electron9Eta, "Electron9Eta/D");
   Tree->Branch("Electron9Phi", &Electron9Phi, "Electron9Phi/D");
   Tree->Branch("Electron9Pass95", &Electron9Pass95, "Electron9Pass95/O");
   Tree->Branch("Electron9Pass90", &Electron9Pass90, "Electron9Pass90/O");
   Tree->Branch("Electron9Pass85", &Electron9Pass85, "Electron9Pass85/O");
   Tree->Branch("Electron9Pass80", &Electron9Pass80, "Electron9Pass80/O");
   Tree->Branch("Electron9Isolation", &Electron9Isolation, "Electron9Isolation/D");
   Tree->Branch("Electron10PT", &Electron10PT, "Electron10PT/D");
   Tree->Branch("Electron10Eta", &Electron10Eta, "Electron10Eta/D");
   Tree->Branch("Electron10Phi", &Electron10Phi, "Electron10Phi/D");
   Tree->Branch("Electron10Pass95", &Electron10Pass95, "Electron10Pass95/O");
   Tree->Branch("Electron10Pass90", &Electron10Pass90, "Electron10Pass90/O");
   Tree->Branch("Electron10Pass85", &Electron10Pass85, "Electron10Pass85/O");
   Tree->Branch("Electron10Pass80", &Electron10Pass80, "Electron10Pass80/O");
   Tree->Branch("Electron10Isolation", &Electron10Isolation, "Electron10Isolation/D");
   
   Tree->Branch("AllElectronCount", &AllElectronCount, "AllElectronCount/I");

   Tree->Branch("AllElectron1PT", &AllElectron1PT, "AllElectron1PT/D");
   Tree->Branch("AllElectron1Eta", &AllElectron1Eta, "AllElectron1Eta/D");
   Tree->Branch("AllElectron1Phi", &AllElectron1Phi, "AllElectron1Phi/D");
   Tree->Branch("AllElectron1Pass95", &AllElectron1Pass95, "AllElectron1Pass95/O");
   Tree->Branch("AllElectron1Pass90", &AllElectron1Pass90, "AllElectron1Pass90/O");
   Tree->Branch("AllElectron1Pass85", &AllElectron1Pass85, "AllElectron1Pass85/O");
   Tree->Branch("AllElectron1Pass80", &AllElectron1Pass80, "AllElectron1Pass80/O");
   Tree->Branch("AllElectron1Isolation", &AllElectron1Isolation, "AllElectron1Isolation/D");
   Tree->Branch("AllElectron1ConversionDistance", &AllElectron1ConversionDistance, "AllElectron1ConversionDistance/D");
   Tree->Branch("AllElectron1ConversionDeltaCotTheta", &AllElectron1ConversionDeltaCotTheta, "AllElectron1ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron1SigmaIEtaIEta", &AllElectron1SigmaIEtaIEta, "AllElectron1SigmaIEtaIEta/D");
   Tree->Branch("AllElectron2PT", &AllElectron2PT, "AllElectron2PT/D");
   Tree->Branch("AllElectron2Eta", &AllElectron2Eta, "AllElectron2Eta/D");
   Tree->Branch("AllElectron2Phi", &AllElectron2Phi, "AllElectron2Phi/D");
   Tree->Branch("AllElectron2Pass95", &AllElectron2Pass95, "AllElectron2Pass95/O");
   Tree->Branch("AllElectron2Pass90", &AllElectron2Pass90, "AllElectron2Pass90/O");
   Tree->Branch("AllElectron2Pass85", &AllElectron2Pass85, "AllElectron2Pass85/O");
   Tree->Branch("AllElectron2Pass80", &AllElectron2Pass80, "AllElectron2Pass80/O");
   Tree->Branch("AllElectron2Isolation", &AllElectron2Isolation, "AllElectron2Isolation/D");
   Tree->Branch("AllElectron2ConversionDistance", &AllElectron2ConversionDistance, "AllElectron2ConversionDistance/D");
   Tree->Branch("AllElectron2ConversionDeltaCotTheta", &AllElectron2ConversionDeltaCotTheta, "AllElectron2ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron2SigmaIEtaIEta", &AllElectron2SigmaIEtaIEta, "AllElectron2SigmaIEtaIEta/D");
   Tree->Branch("AllElectron3PT", &AllElectron3PT, "AllElectron3PT/D");
   Tree->Branch("AllElectron3Eta", &AllElectron3Eta, "AllElectron3Eta/D");
   Tree->Branch("AllElectron3Phi", &AllElectron3Phi, "AllElectron3Phi/D");
   Tree->Branch("AllElectron3Pass95", &AllElectron3Pass95, "AllElectron3Pass95/O");
   Tree->Branch("AllElectron3Pass90", &AllElectron3Pass90, "AllElectron3Pass90/O");
   Tree->Branch("AllElectron3Pass85", &AllElectron3Pass85, "AllElectron3Pass85/O");
   Tree->Branch("AllElectron3Pass80", &AllElectron3Pass80, "AllElectron3Pass80/O");
   Tree->Branch("AllElectron3Isolation", &AllElectron3Isolation, "AllElectron3Isolation/D");
   Tree->Branch("AllElectron3ConversionDistance", &AllElectron3ConversionDistance, "AllElectron3ConversionDistance/D");
   Tree->Branch("AllElectron3ConversionDeltaCotTheta", &AllElectron3ConversionDeltaCotTheta, "AllElectron3ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron3SigmaIEtaIEta", &AllElectron3SigmaIEtaIEta, "AllElectron3SigmaIEtaIEta/D");
   Tree->Branch("AllElectron4PT", &AllElectron4PT, "AllElectron4PT/D");
   Tree->Branch("AllElectron4Eta", &AllElectron4Eta, "AllElectron4Eta/D");
   Tree->Branch("AllElectron4Phi", &AllElectron4Phi, "AllElectron4Phi/D");
   Tree->Branch("AllElectron4Pass95", &AllElectron4Pass95, "AllElectron4Pass95/O");
   Tree->Branch("AllElectron4Pass90", &AllElectron4Pass90, "AllElectron4Pass90/O");
   Tree->Branch("AllElectron4Pass85", &AllElectron4Pass85, "AllElectron4Pass85/O");
   Tree->Branch("AllElectron4Pass80", &AllElectron4Pass80, "AllElectron4Pass80/O");
   Tree->Branch("AllElectron4Isolation", &AllElectron4Isolation, "AllElectron4Isolation/D");
   Tree->Branch("AllElectron4ConversionDistance", &AllElectron4ConversionDistance, "AllElectron4ConversionDistance/D");
   Tree->Branch("AllElectron4ConversionDeltaCotTheta", &AllElectron4ConversionDeltaCotTheta, "AllElectron4ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron4SigmaIEtaIEta", &AllElectron4SigmaIEtaIEta, "AllElectron4SigmaIEtaIEta/D");
   Tree->Branch("AllElectron5PT", &AllElectron5PT, "AllElectron5PT/D");
   Tree->Branch("AllElectron5Eta", &AllElectron5Eta, "AllElectron5Eta/D");
   Tree->Branch("AllElectron5Phi", &AllElectron5Phi, "AllElectron5Phi/D");
   Tree->Branch("AllElectron5Pass95", &AllElectron5Pass95, "AllElectron5Pass95/O");
   Tree->Branch("AllElectron5Pass90", &AllElectron5Pass90, "AllElectron5Pass90/O");
   Tree->Branch("AllElectron5Pass85", &AllElectron5Pass85, "AllElectron5Pass85/O");
   Tree->Branch("AllElectron5Pass80", &AllElectron5Pass80, "AllElectron5Pass80/O");
   Tree->Branch("AllElectron5Isolation", &AllElectron5Isolation, "AllElectron5Isolation/D");
   Tree->Branch("AllElectron5ConversionDistance", &AllElectron5ConversionDistance, "AllElectron5ConversionDistance/D");
   Tree->Branch("AllElectron5ConversionDeltaCotTheta", &AllElectron5ConversionDeltaCotTheta, "AllElectron5ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron5SigmaIEtaIEta", &AllElectron5SigmaIEtaIEta, "AllElectron5SigmaIEtaIEta/D");
   Tree->Branch("AllElectron6PT", &AllElectron6PT, "AllElectron6PT/D");
   Tree->Branch("AllElectron6Eta", &AllElectron6Eta, "AllElectron6Eta/D");
   Tree->Branch("AllElectron6Phi", &AllElectron6Phi, "AllElectron6Phi/D");
   Tree->Branch("AllElectron6Pass95", &AllElectron6Pass95, "AllElectron6Pass95/O");
   Tree->Branch("AllElectron6Pass90", &AllElectron6Pass90, "AllElectron6Pass90/O");
   Tree->Branch("AllElectron6Pass85", &AllElectron6Pass85, "AllElectron6Pass85/O");
   Tree->Branch("AllElectron6Pass80", &AllElectron6Pass80, "AllElectron6Pass80/O");
   Tree->Branch("AllElectron6Isolation", &AllElectron6Isolation, "AllElectron6Isolation/D");
   Tree->Branch("AllElectron6ConversionDistance", &AllElectron6ConversionDistance, "AllElectron6ConversionDistance/D");
   Tree->Branch("AllElectron6ConversionDeltaCotTheta", &AllElectron6ConversionDeltaCotTheta, "AllElectron6ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron6SigmaIEtaIEta", &AllElectron6SigmaIEtaIEta, "AllElectron6SigmaIEtaIEta/D");
   Tree->Branch("AllElectron7PT", &AllElectron7PT, "AllElectron7PT/D");
   Tree->Branch("AllElectron7Eta", &AllElectron7Eta, "AllElectron7Eta/D");
   Tree->Branch("AllElectron7Phi", &AllElectron7Phi, "AllElectron7Phi/D");
   Tree->Branch("AllElectron7Pass95", &AllElectron7Pass95, "AllElectron7Pass95/O");
   Tree->Branch("AllElectron7Pass90", &AllElectron7Pass90, "AllElectron7Pass90/O");
   Tree->Branch("AllElectron7Pass85", &AllElectron7Pass85, "AllElectron7Pass85/O");
   Tree->Branch("AllElectron7Pass80", &AllElectron7Pass80, "AllElectron7Pass80/O");
   Tree->Branch("AllElectron7Isolation", &AllElectron7Isolation, "AllElectron7Isolation/D");
   Tree->Branch("AllElectron7ConversionDistance", &AllElectron7ConversionDistance, "AllElectron7ConversionDistance/D");
   Tree->Branch("AllElectron7ConversionDeltaCotTheta", &AllElectron7ConversionDeltaCotTheta, "AllElectron7ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron7SigmaIEtaIEta", &AllElectron7SigmaIEtaIEta, "AllElectron7SigmaIEtaIEta/D");
   Tree->Branch("AllElectron8PT", &AllElectron8PT, "AllElectron8PT/D");
   Tree->Branch("AllElectron8Eta", &AllElectron8Eta, "AllElectron8Eta/D");
   Tree->Branch("AllElectron8Phi", &AllElectron8Phi, "AllElectron8Phi/D");
   Tree->Branch("AllElectron8Pass95", &AllElectron8Pass95, "AllElectron8Pass95/O");
   Tree->Branch("AllElectron8Pass90", &AllElectron8Pass90, "AllElectron8Pass90/O");
   Tree->Branch("AllElectron8Pass85", &AllElectron8Pass85, "AllElectron8Pass85/O");
   Tree->Branch("AllElectron8Pass80", &AllElectron8Pass80, "AllElectron8Pass80/O");
   Tree->Branch("AllElectron8Isolation", &AllElectron8Isolation, "AllElectron8Isolation/D");
   Tree->Branch("AllElectron8ConversionDistance", &AllElectron8ConversionDistance, "AllElectron8ConversionDistance/D");
   Tree->Branch("AllElectron8ConversionDeltaCotTheta", &AllElectron8ConversionDeltaCotTheta, "AllElectron8ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron8SigmaIEtaIEta", &AllElectron8SigmaIEtaIEta, "AllElectron8SigmaIEtaIEta/D");
   Tree->Branch("AllElectron9PT", &AllElectron9PT, "AllElectron9PT/D");
   Tree->Branch("AllElectron9Eta", &AllElectron9Eta, "AllElectron9Eta/D");
   Tree->Branch("AllElectron9Phi", &AllElectron9Phi, "AllElectron9Phi/D");
   Tree->Branch("AllElectron9Pass95", &AllElectron9Pass95, "AllElectron9Pass95/O");
   Tree->Branch("AllElectron9Pass90", &AllElectron9Pass90, "AllElectron9Pass90/O");
   Tree->Branch("AllElectron9Pass85", &AllElectron9Pass85, "AllElectron9Pass85/O");
   Tree->Branch("AllElectron9Pass80", &AllElectron9Pass80, "AllElectron9Pass80/O");
   Tree->Branch("AllElectron9Isolation", &AllElectron9Isolation, "AllElectron9Isolation/D");
   Tree->Branch("AllElectron9ConversionDistance", &AllElectron9ConversionDistance, "AllElectron9ConversionDistance/D");
   Tree->Branch("AllElectron9ConversionDeltaCotTheta", &AllElectron9ConversionDeltaCotTheta, "AllElectron9ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron9SigmaIEtaIEta", &AllElectron9SigmaIEtaIEta, "AllElectron9SigmaIEtaIEta/D");
   Tree->Branch("AllElectron10PT", &AllElectron10PT, "AllElectron10PT/D");
   Tree->Branch("AllElectron10Eta", &AllElectron10Eta, "AllElectron10Eta/D");
   Tree->Branch("AllElectron10Phi", &AllElectron10Phi, "AllElectron10Phi/D");
   Tree->Branch("AllElectron10Pass95", &AllElectron10Pass95, "AllElectron10Pass95/O");
   Tree->Branch("AllElectron10Pass90", &AllElectron10Pass90, "AllElectron10Pass90/O");
   Tree->Branch("AllElectron10Pass85", &AllElectron10Pass85, "AllElectron10Pass85/O");
   Tree->Branch("AllElectron10Pass80", &AllElectron10Pass80, "AllElectron10Pass80/O");
   Tree->Branch("AllElectron10Isolation", &AllElectron10Isolation, "AllElectron10Isolation/D");
   Tree->Branch("AllElectron10ConversionDistance", &AllElectron10ConversionDistance, "AllElectron10ConversionDistance/D");
   Tree->Branch("AllElectron10ConversionDeltaCotTheta", &AllElectron10ConversionDeltaCotTheta, "AllElectron10ConversionDeltaCotTheta/D");
   Tree->Branch("AllElectron10SigmaIEtaIEta", &AllElectron10SigmaIEtaIEta, "AllElectron10SigmaIEtaIEta/D");

   // baseline event selection
   Tree->Branch("PassHLT", &PassHLT, "PassHLT/O");
   Tree->Branch("PassNoiseFilter", &PassNoiseFilter, "PassNoiseFilter/O");
   Tree->Branch("PassCaloJetID", &PassCaloJetID, "PassCaloJetID/O");
   Tree->Branch("PassCaloJet60", &PassCaloJet60, "PassCaloJet60/O");
   Tree->Branch("PassPFJetID", &PassPFJetID, "PassPFJetID/O");
   Tree->Branch("PassPFJet60", &PassPFJet60, "PassPFJet60/O");

   // auxiliary HLT bits
   Tree->Branch("PassDiJetAve30", &PassDiJetAve30, "PassDiJetAve30/O");
   Tree->Branch("PassDiJetAve60", &PassDiJetAve60, "PassDiJetAve60/O");
   Tree->Branch("PassDiJetAve80", &PassDiJetAve80, "PassDiJetAve80/O");
   Tree->Branch("PassDiJetAve110", &PassDiJetAve110, "PassDiJetAve110/O");
   Tree->Branch("PassDiJetAve150", &PassDiJetAve150, "PassDiJetAve150/O");
   Tree->Branch("PassDiJetAve190", &PassDiJetAve190, "PassDiJetAve190/O");
   Tree->Branch("PassDiJetAve240", &PassDiJetAve240, "PassDiJetAve240/O");
   Tree->Branch("PassDiJetAve300", &PassDiJetAve300, "PassDiJetAve300/O");
   Tree->Branch("PassDiJetAve370", &PassDiJetAve370, "PassDiJetAve370/O");

   Tree->Branch("PassDiJetAve15U", &PassDiJetAve15U, "PassDiJetAve15U/O");
   Tree->Branch("PassDiJetAve30U", &PassDiJetAve30U, "PassDiJetAve30U/O");
   Tree->Branch("PassDiJetAve50U", &PassDiJetAve50U, "PassDiJetAve50U/O");
   Tree->Branch("PassDiJetAve70U", &PassDiJetAve70U, "PassDiJetAve70U/O");
   Tree->Branch("PassDiJetAve100U", &PassDiJetAve100U, "PassDiJetAve100U/O");
   Tree->Branch("PassDiJetAve140U", &PassDiJetAve140U, "PassDiJetAve140U/O");
   Tree->Branch("PassDiJetAve180U", &PassDiJetAve180U, "PassDiJetAve180U/O");
   Tree->Branch("PassDiJetAve300U", &PassDiJetAve300U, "PassDiJetAve300U/O");

   Tree->Branch("PassSingleMu3", &PassSingleMu3, "PassSingleMu3/O");
   Tree->Branch("PassSingleMu5", &PassSingleMu5, "PassSingleMu5/O");
   Tree->Branch("PassSingleMu8", &PassSingleMu8, "PassSingleMu8/O");
   Tree->Branch("PassSingleMu12", &PassSingleMu12, "PassSingleMu12/O");
   Tree->Branch("PassSingleMu15", &PassSingleMu15, "PassSingleMu15/O");
   Tree->Branch("PassSingleMu20", &PassSingleMu20, "PassSingleMu20/O");
   Tree->Branch("PassSingleMu24", &PassSingleMu24, "PassSingleMu24/O");
   Tree->Branch("PassSingleMu30", &PassSingleMu30, "PassSingleMu30/O");
   Tree->Branch("PassSingleMu40", &PassSingleMu40, "PassSingleMu40/O");
   Tree->Branch("PassSingleMu100", &PassSingleMu100, "PassSingleMu100/O");

   Tree->Branch("PassR014MR150", &PassR014MR150, "PassR014MR150/O");
   Tree->Branch("PassR020MR150", &PassR020MR150, "PassR020MR150/O");
   Tree->Branch("PassR025MR150", &PassR025MR150, "PassR025MR150/O");
   Tree->Branch("PassR020MR500", &PassR020MR500, "PassR020MR500/O");
   Tree->Branch("PassR020MR550", &PassR020MR550, "PassR020MR550/O");
   Tree->Branch("PassR023MR550", &PassR023MR550, "PassR023MR550/O");
   Tree->Branch("PassR025MR400", &PassR025MR400, "PassR025MR400/O");
   Tree->Branch("PassR025MR450", &PassR025MR450, "PassR025MR450/O");
   Tree->Branch("PassR029MR450", &PassR029MR450, "PassR029MR450/O");
   Tree->Branch("PassR033MR300", &PassR033MR300, "PassR033MR300/O");
   Tree->Branch("PassR033MR350", &PassR033MR350, "PassR033MR350/O");
   Tree->Branch("PassR036MR350", &PassR036MR350, "PassR036MR350/O");
   Tree->Branch("PassR038MR200", &PassR038MR200, "PassR038MR200/O");
   Tree->Branch("PassR038MR250", &PassR038MR250, "PassR038MR250/O");
   Tree->Branch("PassR042MR250", &PassR042MR250, "PassR042MR250/O");

   Tree->Branch("PassEleL10R020MR200", &PassEleL10R020MR200, "PassEleL10R020MR200/O");
   Tree->Branch("PassEleL10R025MR200", &PassEleL10R025MR200, "PassEleL10R025MR200/O");
   Tree->Branch("PassEleL10R029MR200", &PassEleL10R029MR200, "PassEleL10R029MR200/O");
   Tree->Branch("PassEleT10R020MR200", &PassEleT10R020MR200, "PassEleT10R020MR200/O");

   Tree->Branch("PassMu8R020MR200", &PassMu8R020MR200, "PassMu8R020MR200/O");
   Tree->Branch("PassMu8R025MR200", &PassMu8R025MR200, "PassMu8R025MR200/O");
   Tree->Branch("PassMu8R029MR200", &PassMu8R029MR200, "PassMu8R029MR200/O");

   Tree->Branch("PassMu17Mu8", &PassMu17Mu8, "PassMu17Mu8/O");
   Tree->Branch("PassMu13Mu8", &PassMu13Mu8, "PassMu13Mu8/O");

   Tree->Branch("PassMu8EleL17", &PassMu8EleL17, "PassMu8EleL17/O");
   Tree->Branch("PassMu17EleL8", &PassMu17EleL8, "PassMu17EleL8/O");

   Tree->Branch("PassMET65", &PassMET65, "PassMET65/O");
   Tree->Branch("PassMET120", &PassMET120, "PassMET120/O");
   Tree->Branch("PassMET100", &PassMET100, "PassMET100/O");
   Tree->Branch("PassMET200", &PassMET200, "PassMET200/O");
   Tree->Branch("PassMET400", &PassMET400, "PassMET400/O");

   Tree->Branch("PassHT150", &PassHT150, "PassHT150/O");
   Tree->Branch("PassHT200", &PassHT200, "PassHT200/O");
   Tree->Branch("PassHT250", &PassHT250, "PassHT250/O");
   Tree->Branch("PassHT300", &PassHT300, "PassHT300/O");
   Tree->Branch("PassHT350", &PassHT350, "PassHT350/O");
   Tree->Branch("PassHT400", &PassHT400, "PassHT400/O");
   Tree->Branch("PassHT450", &PassHT450, "PassHT450/O");
   Tree->Branch("PassHT500", &PassHT500, "PassHT500/O");
   Tree->Branch("PassHT550", &PassHT550, "PassHT550/O");
   Tree->Branch("PassHT600", &PassHT600, "PassHT600/O");
   Tree->Branch("PassHT650", &PassHT650, "PassHT650/O");
   Tree->Branch("PassHT2000", &PassHT2000, "PassHT2000/O");
   
   Tree->Branch("SBMass1", &SBMass1, "SBMass1/D");
   Tree->Branch("SBMass2", &SBMass2, "SBMass2/D");
   Tree->Branch("ChiMass", &ChiMass, "ChiMass/D");
   Tree->Branch("m0", &m0, "m0/D");
   Tree->Branch("m12", &m12, "m12/D");
   
   Tree->Branch("PhotonCount", &PhotonCount, "PhotonCount/I");
   Tree->Branch("PhotonE", PhotonE, "PhotonE[10]/D");
   Tree->Branch("PhotonPT", PhotonPT, "PhotonPT[10]/D");
   Tree->Branch("PhotonEta", PhotonEta, "PhotonEta[10]/D");
   Tree->Branch("PhotonPhi", PhotonPhi, "PhotonPhi[10]/D");
   Tree->Branch("PhotonFiducialFlag", PhotonFiducialFlag, "PhotonFiducialFlag[10]/I");
   Tree->Branch("PhotonRecoFlag", PhotonRecoFlag, "PhotonRecoFlag[10]/I");
   Tree->Branch("PhotonHOverE", PhotonHOverE, "PhotonHOverE[10]/D");
   Tree->Branch("PhotonTrackIsolation", PhotonTrackIsolation, "PhotonTrackIsolation[10]/D");
   Tree->Branch("PhotonHollowTrackIsolation", PhotonHollowTrackIsolation, "PhotonHollowTrackIsolation[10]/D");
   Tree->Branch("PhotonEcalIsolation", PhotonEcalIsolation, "PhotonEcalIsolation[10]/D");
   Tree->Branch("PhotonHcalIsolation", PhotonHcalIsolation, "PhotonHcalIsolation[10]/D");
   Tree->Branch("PhotonIsolation", PhotonIsolation, "PhotonIsolation[10]/D");
   Tree->Branch("PhotonPixelSeed", PhotonPixelSeed, "PhotonPixelSeed[10]/O");
   Tree->Branch("PhotonMatchedConversion", PhotonMatchedConversion, "PhotonMatchedConversion[10]/O");
   Tree->Branch("PhotonSigmaIEtaIEta", PhotonSigmaIEtaIEta, "PhotonSigmaIEtaIEta[10]/D");
   Tree->Branch("PhotonR9", PhotonR9, "PhotonR9[10]/D");

   Tree->Branch("Rho", &Rho, "Rho/D");
}

void TreeRecord::InitializeWeight(string RootFile)
{
   double Flat10[25] = {0.0698146584, 0.0698146584, 0.0698146584,
      0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584,
      0.0698146584, 0.0698146584, 0.0698146584, 0.0630151648, 0.0526654164,
      0.0402754482, 0.0292988928, 0.0194384503, 0.0122016783, 0.007207042,
      0.004003637, 0.0020278322, 0.0010739954, 0.0004595759, 0.0002229748,
      0.0001028162, 4.58337152809607E-05};

   double DataAverage[25] = {0};
   TFile F(RootFile.c_str());
   TH1D *H = (TH1D *)F.Get("pileup");
   for(int i = 1; i <= 25; i++)
      DataAverage[i-1] = H->GetBinContent(i);
   F.Close();

   PUWeight.resize(25);
   for(int i = 0; i < 25; i++)
      PUWeight[i] = DataAverage[i] / Flat10[i];

   double Total = 0;
   for(int i = 0; i < 25; i++)
      Total = Total + PUWeight[i];
   for(int i = 0; i < 25; i++)
      PUWeight[i] = PUWeight[i] / Total;
}

double TreeRecord::GetCurrentWeight()
{
   return GetWeight(PileUp);
}

double TreeRecord::GetWeight(int NPU)
{
   if(NPU < PUWeight.size())
      return PUWeight[NPU];
   return 0;
}



